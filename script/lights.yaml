##########################################
##########  SCENEGEN #####################
##########################################
  scenegen:
    alias: "SceneGen: Save Scene"
    sequence:
    - service: shell_command.scenegen

##########################################
########## EFFECTS #######################
##########################################
  10m_flood_day_bright:
    sequence:
    - service: script.turn_off
      entity_id: script.flood_scene
    - service: script.flood_scene
      data:
        flood_scene: scene.day_bright
        delay: "00:10:00"

##########################################
########## LAST KNOW SCENE ###############
##########################################
  call_last_known_scene:
    sequence:
    - service: scene.turn_on
      data_template:
        entity_id: 'scene.{{ states("input_select.var_last_known_scene") | replace(" ", "_") | lower }}'
    - service: script.call_last_known_led_scene
    - condition: state
      entity_id: input_boolean.var_kitchen_on
      state: 'on'
    - service: script.kitchen_lights_on



  call_last_known_scene_0s:
    sequence:
    - service: scene.turn_on
      data_template:
        entity_id: 'scene.0s_{{ states("input_select.var_last_known_scene") | replace(" ", "_") | lower }}'
    - delay: "00:00:00"
    - service: script.call_last_known_led_scene
    - condition: state
      entity_id: input_boolean.var_kitchen_on
      state: 'on'
    - service: script.kitchen_lights_on



  call_last_known_led_scene:
    sequence:
    - service: mqtt.publish
      data_template:
        topic: "device/office/led1/color"
        payload: '{{ states.light.office_led_strip.attributes.rgb_color | replace("[", "") | replace("]", "") }}'
    - service: mqtt.publish
      data_template:
        topic: "device/office/led1/effect"
        payload: >
          {% for opt in states.input_select.office_led_effect.attributes.options -%}
            {% if states.input_select.office_led_effect.state | string == opt %}
              {{loop.index - 1}}
            {%endif%}
          {%- endfor -%}

    - service: mqtt.publish
      data_template:
        topic: "device/kitchen/led1/color"
        payload: '{{ states.light.kitchen_led_strip.attributes.rgb_color | replace("[", "") | replace("]", "") }}'
    - service: mqtt.publish
      data_template:
        topic: "device/kitchen/led1/effect"
        payload: >
          {% for opt in states.input_select.kitchen_led_effect.attributes.options -%}
            {% if states.input_select.kitchen_led_effect.state | string == opt %}
              {{loop.index - 1}}
            {%endif%}
          {%- endfor -%}

    - service: mqtt.publish
      data_template:
        topic: "device/tables/led1/color"
        payload: '{{ states.light.tables_led_strip.attributes.rgb_color | replace("[", "") | replace("]", "") }}'
    - service: mqtt.publish
      data_template:
        topic: "device/tables/led1/effect"
        payload: >
          {% for opt in states.input_select.tables_led_effect.attributes.options -%}
            {% if states.input_select.tables_led_effect.state | string == opt %}
              {{loop.index - 1}}
            {%endif%}
          {%- endfor -%}

    - service: mqtt.publish
      data_template:
        topic: "device/entertainment_center/led1/color"
        payload: '{{ states.light.entertainment_center_led_strip.attributes.rgb_color | replace("[", "") | replace("]", "") }}'
    - service: mqtt.publish
      data_template:
        topic: "device/entertainment_center/led1/effect"
        payload: >
          {% for opt in states.input_select.entertainment_center_led_effect.attributes.options -%}
            {% if states.input_select.entertainment_center_led_effect.state | string == opt %}
              {{loop.index - 1}}
            {%endif%}
          {%- endfor -%}

    - service: mqtt.publish
      data_template:
        topic: "device/bedroom/led1/color"
        payload: '{{ states.light.bedroom_led_strip.attributes.rgb_color | replace("[", "") | replace("]", "") }}'
    - service: mqtt.publish
      data_template:
        topic: "device/bedroom/led1/effect"
        payload: >
          {% for opt in states.input_select.bedroom_led_effect.attributes.options -%}
            {% if states.input_select.bedroom_led_effect.state | string == opt %}
              {{loop.index - 1}}
            {%endif%}
          {%- endfor -%}
