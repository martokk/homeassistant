# homeassistant:
#   customize:
    # input_boolean.template:
    #   emulated_hue: true
    #   emulated_hue_name: "Template Name"
# switch:
# lights:
# binary_sensor:
sensor:
  - platform: template
    sensors:
      indoor_temperature:
        friendly_name: "Indoor Temperature"
        unit_of_measurement: 'ºF'
        value_template: >-
          {% set temp = 0.0 %}
          {% set c = 0 %}

          {################################ CALCULATE DAY TIME ################################}
          {% if states.sensor.kitchen_temperature %}
            {% if states.sensor.kitchen_temperature.state | float > 1.0 %}
              {% if (as_timestamp(now())-as_timestamp(states.sensor.kitchen_temperature.last_changed)) < (2 * 60 * 60)  %}
                {% set temp = temp + states.sensor.kitchen_temperature.state | float %}
                {% set c = c + 1 %}
              {% endif %}
            {% endif %}
          {% endif %}
          {% if states.sensor.tables_temperature %}
            {% if states.sensor.tables_temperature.state | float > 1.0 %}
              {% if (as_timestamp(now())-as_timestamp(states.sensor.tables_temperature.last_changed)) < (2 * 60 * 60)  %}
                {% set temp = temp + states.sensor.tables_temperature.state | float %}
                {% set c = c + 1 %}
              {% endif %}
            {% endif %}
          {% endif %}
          {% if states.sensor.office_temperature %}
            {% if (as_timestamp(now())-as_timestamp(states.sensor.office_temperature.last_changed)) < (2 * 60 * 60)  %}
              {% if states.sensor.office_temperature.state | float > 1.0 %}
                {% set temp = temp + states.sensor.office_temperature.state | float %}
                {% set c = c + 1 %}
              {% endif %}
            {% endif %}
          {% endif %}
          {% if states.sensor.entertainment_center_temperature %}
            {% if states.switch.sonoff_entertainment_center.state == 'off' %}
              {% if (as_timestamp(now())-as_timestamp(states.sensor.entertainment_center_temperature.last_changed)) < (2 * 60 * 60)  %}
                {% if states.sensor.entertainment_center_temperature.state | float > 1.0 %}
                  {% set temp = temp + states.sensor.entertainment_center_temperature.state | float %}
                  {% set c = c + 1 %}
                {% endif %}
              {% endif %}
            {% endif %}
          {% endif %}

          {% if states.sensor.time.state[:2] | int >= 23 or states.sensor.time.state[:2] | int < 8 %}
            {################################ NIGHT TIME ################################}
            {% if states.input_boolean.option_mode_sleep.state == 'on' %}
              {{ ((states.sensor.bedroom_temperature.state | float + (temp / c) | float) / 2) | round(1) }}
            {% else %}
              {% if c > 0 %}
               {{ (temp / c) | round(1) | float }}
              {% endif %}
            {% endif %}
          {% else %}
          {################################ DAY TIME ################################}
            {% if c > 0 %}
             {{ (temp / c) | round(1) | float }}
            {% endif %}
          {% endif %}


      indoor_humidity:
        friendly_name: "Indoor Humidity"
        unit_of_measurement: '%'
        value_template: >-
          {% set humidity = 0.0 %}
          {% set c = 0 %}

          {################################ CALCULATE DAY TIME ################################}
          {% if states.sensor.kitchen_humidity %}
            {% if states.sensor.kitchen_humidity.state | float > 1.0 %}
              {% if (as_timestamp(now())-as_timestamp(states.sensor.kitchen_humidity.last_changed)) < (2 * 60 * 60)  %}
                {% set humidity = humidity + states.sensor.kitchen_humidity.state | float %}
                {% set c = c + 1 %}
              {% endif %}
            {% endif %}
          {% endif %}
          {% if states.sensor.tables_humidity %}
            {% if states.sensor.tables_humidity.state | float > 1.0 %}
              {% if (as_timestamp(now())-as_timestamp(states.sensor.tables_humidity.last_changed)) < (2 * 60 * 60)  %}
                {% set humidity = humidity + states.sensor.tables_humidity.state | float %}
                {% set c = c + 1 %}
              {% endif %}
            {% endif %}
          {% endif %}
          {% if states.sensor.office_humidity %}
            {% if (as_timestamp(now())-as_timestamp(states.sensor.office_humidity.last_changed)) < (2 * 60 * 60)  %}
              {% if states.sensor.office_humidity.state | float > 1.0 %}
                {% set humidity = humidity + states.sensor.office_humidity.state | float %}
                {% set c = c + 1 %}
              {% endif %}
            {% endif %}
          {% endif %}
          {% if states.sensor.entertainment_center_humidity %}
            {% if states.switch.sonoff_entertainment_center.state == 'off' %}
              {% if (as_timestamp(now())-as_timestamp(states.sensor.entertainment_center_humidity.last_changed)) < (2 * 60 * 60)  %}
                {% if states.sensor.entertainment_center_humidity.state | float > 1.0 %}
                  {% set humidity = humidity + states.sensor.entertainment_center_humidity.state | float %}
                  {% set c = c + 1 %}
                {% endif %}
              {% endif %}
            {% endif %}
          {% endif %}

          {% if states.sensor.time.state[:2] | int >= 23 or states.sensor.time.state[:2] | int < 8 %}
            {################################ NIGHT TIME ################################}
            {% if states.sensor.bedroom_humidity %}
              {{ states.sensor.bedroom_humidity.state | float }}
            {% else %}
              {% if c > 0 %}
               {{ (humidity / c) | round(1) | float }}
              {% endif %}
            {% endif %}
          {% else %}
          {################################ DAY TIME ################################}
            {% if c > 0 %}
             {{ (humidity / c) | round(1) | float }}
            {% endif %}
          {% endif %}

automation:
##########################################
########## NOTIFICATIONS #################
##########################################
  - alias: bedroom_temperature_cold_after_9pm
    trigger:
      - platform: template
        value_template: "{% if states.sensor.bedroom_temperature.state | int < states.input_slider.var_indoor_temp_cool.state | int and states.sensor.bedroom_temperature.state | int > 1 %}true{%endif%}"
    condition:
      - condition: state
        entity_id: input_boolean.var_mike_home
        state: 'on'
      - condition: time
        after: '21:00:00'
    action:
      - condition: template
        value_template: >
          {% if states.automation.indoor_temp_cold.attributes.last_triggered %}
            {% if (as_timestamp(now())-as_timestamp(states.automation.indoor_temp_cold.attributes.last_triggered)) > (0 * 30 * 60)  %}
              true
            {% endif %}
          {%else%}
            true
          {%endif%}
      - service: script.notify2
        data_template:
          telegram_message: |
            Close bedroom window!
            *Bedroom: {{ states.sensor.bedroom_temperature.state | round(1) }}°F*

  - alias: humidity_high
    trigger:
      - platform: state
        entity_id: input_boolean.var_indoor_humidity_high
        to: 'on'
    action:
      # Don't Repeat Notification if already triggered within 1 hour
      - condition: template
        value_template: >
          {% if states.automation.humidity_high.attributes.last_triggered %}
            {% if (as_timestamp(now())-as_timestamp(states.automation.indoor_temp_cold.attributes.last_triggered)) > (1 * 60 * 60)  %}
              true
            {% endif %}
          {%else%}
            true
          {%endif%}
      - service: script.notify2
        data_template:
          telegram_message: |
            Indoor Humidity is HIGH. Consider turning on Air Conditioner.

  - alias: humidity_low
    trigger:
      - platform: state
        entity_id: input_boolean.var_indoor_humidity_low
        to: 'on'
    action:
      # Don't Repeat Notification if already triggered within 1 hour
      - condition: template
        value_template: >
          {% if states.automation.humidity_high.attributes.last_triggered %}
            {% if (as_timestamp(now())-as_timestamp(states.automation.indoor_temp_cold.attributes.last_triggered)) > (1 * 60 * 60)  %}
              true
            {% endif %}
          {%else%}
            true
          {%endif%}
      - service: script.notify2
        data_template:
          telegram_message: |
            Indoor Humidity is LOW. Consider turning on Shower or Humidifier.

##########################################
########## AUTOMATIONS ###################
##########################################




##########################################
########## SCRIPTS #######################
##########################################
# script:




# input_boolean:
##########################################
########## STORED VARIABLES ##############
##########################################



##########################################
########## OPTIONS #######################
##########################################


##########################################
############### GROUPS ###################
##########################################
group:

  temperature_sensors:
    name: "Temperature"
    entities:
      - sensor.dark_sky_temperature
      - sensor.indoor_temperature
      - sensor.kitchen_temperature
      - sensor.tables_temperature
      - sensor.entertainment_center_temperature
      - sensor.office_temperature
      - sensor.bedroom_temperature

  humidity_sensors:
    name: "Humidity"
    entities:
      - sensor.dark_sky_humidity
      - sensor.indoor_humidity
      - sensor.kitchen_humidity
      - sensor.tables_humidity
      - sensor.office_humidity
      - sensor.entertainment_center_humidity
      - sensor.bedroom_humidity

  motion_sensors:
    name: "Motion"
    entities:
      - binary_sensor.kitchen_motion_sensor
      - binary_sensor.sink_motion_sensor
      - binary_sensor.entertainment_center_motion_sensor
      - binary_sensor.bedroom_motion_sensor
      - binary_sensor.office_motion_sensor




  automation_environment:
    entities:
      - automation.bedroom_temperature_cold_after_9pm
      - automation.humidity_low
      - automation.humidity_high
#
#
#   homeassistant_template:
#     entities:
#
#
#   options_template:
#     entities:
#
#
#   script_template:
#     entities:
