##########################################
########## COMPONENTS ####################
##########################################
# sensor:

#-----------------------------------------------------#

automation:
##########################################
########## NOTIFICATIONS #################
##########################################

##########################################
########## OVERRIDES #####################
##########################################
  - alias: fans_override
    trigger:
      - platform: event
        event_type: call_service
        event_data:
          service_data:
            entity_id: input_boolean.override_fans_helper
    action:
      # - service: script.notify2
      #   data_template:
      #     telegram_message: '{{ trigger | string }}'
      - service: script.turn_on
        data_template:
          entity_id: >
            {% if "turn_off" in trigger.event | string %}
              script.override_turn_off_fans
            {% else %}
              script.override_turn_on_fans
            {% endif %}

  - alias: fans_override_turn_on
    trigger:
      - platform: state
        entity_id: input_boolean.override_turn_on_fans
        to: 'on'
    action:
      - service: input_boolean.turn_off
        entity_id: input_boolean.override_turn_off_fans
      - service: switch.turn_on
        entity_id: switch.sonoff_small_desk_fan1
      - service: switch.turn_on
        entity_id: switch.sonoff_box_fan1

  - alias: fans_override_turn_off
    trigger:
      - platform: state
        entity_id: input_boolean.override_turn_off_fans
        to: 'on'
    action:
      - service: input_boolean.turn_off
        entity_id: input_boolean.override_turn_on_fans
      - service: switch.turn_off
        entity_id: switch.sonoff_small_desk_fan1
      - service: switch.turn_off
        entity_id: switch.sonoff_box_fan1

##########################################
########## AUTOMATIONS ###################
##########################################
  #********** Fans - Circulate Air  ***************************************#
  - alias: fans_circulate_air_on
    trigger:
      - platform: time
        hours: '/1'
        minutes: 30
        seconds: 00
    condition:
      - condition: state
        entity_id: input_boolean.option_fans_circulate_air
        state: 'on'
      - condition: state
        entity_id: input_boolean.option_indoor_temp_cool
        state: 'off'
      - condition: state
        entity_id: input_boolean.option_indoor_temp_cold
        state: 'off'
    action:
      - service: input_boolean.turn_on
        entity_id: input_boolean.var_fans_circulate_air_on
      - delay: '00:05:00'
      - condition: state
        entity_id: input_boolean.option_fans_circulate_air
        state: 'on'
      - service: input_boolean.turn_off
        entity_id: input_boolean.var_fans_circulate_air_on

  - alias: fans_circulate_air_off
    trigger:
      - platform: time
        hours: '/1'
        minutes: 35
        seconds: 00
      - platform: state
        entity_id: input_boolean.option_indoor_temp_cool
        to: 'on'
      - platform: state
        entity_id: input_boolean.option_indoor_temp_cold
        to: 'on'
      - platform: state
        entity_id: input_boolean.option_fans_circulate_air
        to: 'off'
    action:
      - service: input_boolean.turn_off
        entity_id: input_boolean.var_fans_circulate_air_on

  #********** Fans - Smoke Session  ***************************************#
  - alias: fans_smoke_session_on
    trigger:
      - platform: time
        minutes: 05
        seconds: 00
      - platform: state
        entity_id: input_boolean.var_fans_smoke_session_on
        to: 'on'
    condition:
      - condition: state
        entity_id: input_boolean.var_fans_smoke_session_on
        state: 'on'
    action:
      - service: input_boolean.turn_on
        entity_id: input_boolean.var_fans_circulate_air_on
      - delay: '00:30:00'
      - service: input_boolean.turn_off
        entity_id: input_boolean.var_fans_circulate_air_on

  - alias: fans_smoke_session_off
    trigger:
      - platform: state
        entity_id: input_boolean.option_indoor_temp_cold
        to: 'on'
      - platform: state
        entity_id: input_boolean.var_fans_smoke_session_on
        to: 'off'
    action:
      - service: input_boolean.turn_off
        entity_id: input_boolean.var_fans_circulate_air_on

  #********** Fans - Temperature Controlled  ***************************************#
  - alias: fans_temperature_controlled_on
    trigger:
      - platform: state
        entity_id: input_boolean.option_indoor_temp_very_warm
        to: 'on'
      - platform: state
        entity_id: input_boolean.option_indoor_temp_hot
        to: 'on'
    condition:
      - condition: state
        entity_id: input_boolean.option_fans_temperature_controlled
        state: 'on'
    action:
      - service: input_boolean.turn_on
        entity_id: input_boolean.var_fans_temperature_controlled_on

  - alias: fans_temperature_controlled_off
    trigger:
      - platform: state
        entity_id: input_boolean.option_indoor_temp_ok
        to: 'on'
      - platform: state
        entity_id: input_boolean.option_indoor_temp_cool
        to: 'on'
      - platform: state
        entity_id: input_boolean.option_indoor_temp_cold
        to: 'on'
    condition:
      - condition: state
        entity_id: input_boolean.option_fans_temperature_controlled
        state: 'on'
    action:
      - service: input_boolean.turn_off
        entity_id: input_boolean.var_fans_temperature_controlled_on


  #********** Fans Automations - On/Off ***************************************#
  - alias: fans_automations_turn_on
    trigger:
      - platform: state
        entity_id: input_boolean.var_fans_circulate_air_on
        to: 'on'
      - platform: state
        entity_id: input_boolean.var_fans_temperature_controlled_on
        to: 'on'
    condition:
      - condition: state
        entity_id: input_boolean.override_turn_off_fans
        state: 'off'
    action:
      - service: switch.turn_on
        entity_id: switch.sonoff_small_desk_fan1
      - service: switch.turn_on
        entity_id: switch.sonoff_box_fan1

  - alias: fans_automations_turn_off
    trigger:
      - platform: state
        entity_id: input_boolean.var_fans_circulate_air_on
        to: 'off'
      - platform: state
        entity_id: input_boolean.var_fans_temperature_controlled_on
        to: 'off'
    condition:
      - condition: state
        entity_id: input_boolean.var_fans_circulate_air_on
        state: 'off'
      - condition: state
        entity_id: input_boolean.var_fans_temperature_controlled_on
        state: 'off'
      - condition: state
        entity_id: input_boolean.override_turn_on_fans
        state: 'off'
    action:
      - service: switch.turn_off
        entity_id: switch.sonoff_small_desk_fan1
      - service: switch.turn_off
        entity_id: switch.sonoff_box_fan1



  #**********  Volume Adjustment - Fans On/Off ***************************************#
  - alias: fan_on_volume_up
    trigger:
      - platform: state
        entity_id: switch.sonoff_small_desk_fan1
        to: 'on'
    action:
      - delay: '00:00:01'

      # All Computers - Volume up 2%
      - service: script.set_computers_volume
        data:
          volume_up: 2

      # Entertainment Center - Volume up 2 clicks
      - condition: state
        entity_id: switch.sonoff_entertainment_center
        state: 'on'
      - service: script.set_entertainment_center_tv_volume
        data:
          volume_up: 2

      # TTS
      - service: media_player.volume_set
        data_template:
          entity_id: media_player.vlc
          volume_level: >
            {% if states.media_player.vlc.attributes.volume_level | float <= 0.95 %}
              {{ states.media_player.vlc.attributes.volume_level | float + 0.05 }}
            {% else %}
              {{ states.media_player.vlc.attributes.volume_level | float }}
            {% endif %}



  - alias: fan_off_volume_down
    trigger:
      - platform: state
        entity_id: switch.sonoff_small_desk_fan1
        to: 'off'
    action:
      - delay: '00:00:01'

      # All Computers - Volume down 2%
      - service: script.set_computers_volume
        data:
          volume_down: 2

      # Entertainment Center - Volume down 2 clicks
      - condition: state
        entity_id: switch.sonoff_entertainment_center
        state: 'on'
      - service: script.set_entertainment_center_tv_volume
        data:
          volume_down: 2

      # TTS
      - service: media_player.volume_set
        data_template:
          entity_id: media_player.vlc
          volume_level: '{{ states.media_player.vlc.attributes.volume_level | float - 0.05 }}'

  #********** TTS Interupt ***************************************#
  - alias: tts_interupt_turn_off_sonoff_small_desk_fan1
    trigger:
      - platform: state
        entity_id: input_boolean.var_tts_interupt
        from: 'off'
        to: 'on'
    condition:
      - condition: state
        entity_id: switch.sonoff_small_desk_fan1
        state: 'on'
    action:
      - service: switch.turn_off
        entity_id: switch.sonoff_small_desk_fan1
      - wait_template: "{{ states.input_boolean.var_tts_interupt.state == 'off' }}"
        timeout: 00:02:00
      - service: switch.turn_on
        entity_id: switch.sonoff_small_desk_fan1

  - alias: tts_interupt_turn_off_sonoff_box_fan1
    trigger:
      - platform: state
        entity_id: input_boolean.var_tts_interupt
        from: 'off'
        to: 'on'
    condition:
      - condition: state
        entity_id: switch.sonoff_sonoff_box_fan1
        state: 'on'
    action:
      - service: switch.turn_off
        entity_id: switch.sonoff_box_fan1
      - wait_template: "{{ states.input_boolean.var_tts_interupt.state == 'off' }}"
        timeout: 00:02:00
      - service: switch.turn_on
        entity_id: switch.sonoff_box_fan1

#-----------------------------------------------------#

##########################################
########## SCRIPTS #######################
##########################################
script:
#********** Override - Turn ON  ***********#
  override_turn_on_fans:
    sequence:
      # If Override already 'on'; turn off
      - service_template: >
          {% if states.input_boolean.override_turn_on_fans.state == 'on' %}
            input_boolean.turn_off
          {% else %}
            script.do_nothing
          {% endif %}
        entity_id: input_boolean.override_turn_on_fans

      # Turn On - Override Input Boolean
      - service: input_boolean.turn_on
        entity_id: input_boolean.override_turn_on_fans

#********** Override - Turn OFF  ***********#
  override_turn_off_fans:
    sequence:
      # If Override already 'on'; turn off
      - service_template: >
          {% if states.input_boolean.override_turn_off_fans.state == 'on' %}
            input_boolean.turn_off
          {% else %}
            script.do_nothing
          {% endif %}
        entity_id: input_boolean.override_turn_off_fans

      # Turn On - Override Input Boolean
      - service: input_boolean.turn_on
        entity_id: input_boolean.override_turn_off_fans

#-----------------------------------------------------#

input_boolean:
##########################################
########## BACKEND #######################
##########################################
  var_fans_circulate_air_on:
  var_fans_temperature_controlled_on:
  var_fans_smoke_session_on:

##########################################
########## OVERRIDES #####################
##########################################
  override_fans_helper:
  override_turn_on_fans:
  override_turn_off_fans:

##########################################
########## OPTIONS #######################
##########################################
  option_fans_temperature_controlled:
    name: "Temperature controlled fans"
    initial: on

  option_fans_circulate_air:
    name: "Circulate air every 2 hours (for 15m)"
    initial: on

##########################################
########## CONFIG ########################
##########################################

#-----------------------------------------------------#

homeassistant:
  customize:
##########################################
########## EMULATED HUE ##################
##########################################
    input_boolean.override_fans_helper:
      emulated_hue: true
      emulated_hue_name: "All Fans"

#-----------------------------------------------------#

group:
##########################################
############### GROUPS ###################
##########################################

##########################################
############### AUTO-GROUPS ##############
##########################################
  automation_fans:
    entities:
      - automation.fans_circulate_air_on
      - automation.fans_circulate_air_off
      - automation.fans_temperature_controlled_on
      - automation.fans_temperature_controlled_off
      - automation.fans_smoke_session_on
      - automation.fans_smoke_session_off
      - automation.fans_automations_turn_on
      - automation.fans_automations_turn_off
      - automation.fans_override
      - automation.fans_override_turn_on
      - automation.fans_override_turn_off
      - automation.fan_on_volume_up
      - automation.fan_off_volume_down
      - automation.tts_interupt_turn_off_sonoff_box_fan1
      - automation.tts_interupt_turn_off_sonoff_small_desk_fan1

  backend_fans:
    entities:
      - input_boolean.var_fans_circulate_air_on
      - input_boolean.var_fans_temperature_controlled_on
      - input_boolean.var_fans_smoke_session_on
      - input_boolean.override_fans_helper
      - input_boolean.override_turn_on_fans
      - input_boolean.override_turn_off_fans

#   hidden_fans:
#     entities:
#       - input_boolean.

  options_fans:
    name: "Fans"
    control: hidden
    entities:
      - input_boolean.option_fans_circulate_air
      - input_boolean.option_fans_temperature_controlled

  script_fans:
    entities:
      - script.override_turn_off_fans
      - script.override_turn_on_fans

#   sensor_fans:
#     entities:
#       - sensor.
