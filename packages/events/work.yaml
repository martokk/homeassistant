##########################################
########## COMPONENTS ####################
##########################################
sensor:
  - platform: template
    sensors:

      # Sensor: Determains if Mike "should" be at work based off time and day of week.
      mike_at_work:
        entity_id:
          - sensor.now_day
          - sensor.now_hour
        value_template: >
          {% set work_week = states.input_text.config_mike_work_week.state %}
          {% set third_shift = states.input_text.config_mike_work_week_third_shift.state %}
          {% set third_shift_first_day = states.input_text.config_mike_work_week_third_shift_first_day.state %}
          {% set third_shift_last_day = states.input_text.config_mike_work_week_third_shift_last_day.state %}

          {% set today = states.sensor.now_day.state %}
          {% set hour = states.sensor.now_hour.state %}

          {####### 3rd Shift ##########}
          {% if third_shift %}
            {####### Check Time ##########}
            {% if hour | int >= states.input_text.config_mike_work_start_hour.state | int or hour | int < states.input_text.config_mike_work_end_hour.state | int %}
              {####### Check Day ##########}
              {% if today in work_week %}
                {###### Check First/Last Day ######}
                {% if today ==  third_shift_first_day and hour | int < states.input_text.config_mike_work_start_hour.state | int %}
                  off
                {% elif today ==  third_shift_last_day and hour | int >= states.input_text.config_mike_work_end_hour.state | int %}
                  off
                {% else %}
                  on
                {% endif %}
              {% else %}
                off
              {% endif %}
            {% else %}
              off
            {% endif %}

          {####### Day Shift ##########}
          {% else %}
            {####### Check Time ##########}
            {% if hour | int >= states.input_text.config_mike_work_start_hour.state | int and hour | int < states.input_text.config_mike_work_end_hour.state | int %}
              {####### Check Day ##########}
              {% if today in work_week %}
                on
              {% else %}
                off
              {% endif %}
            {% else %}
              off
            {% endif %}
          {% endif %}

      # Sensor: Determains if today is a work day for Mike based off day of week.
      mike_work_day:
        entity_id:
          - sensor.now_day
        value_template: >
          {% set work_week = states.input_text.config_mike_work_week.state %}
          {% set third_shift = states.input_text.config_mike_work_week_third_shift.state %}
          {% set third_shift_last_day = states.input_text.config_mike_work_week_third_shift_last_day.state %}
          {% set today = states.sensor.now_day.state %}

          {% if today in work_week %}
            {% if third_shift %}
              {% if today == third_shift_last_day %}
                off
              {% else %}
                on
              {% endif %}
            {% else %}
              on
            {% endif %}
          {% else %}
            off
          {% endif %}

#-----------------------------------------------------#

automation:
##########################################
########## NOTIFICATIONS #################
##########################################

##########################################
########## AUTOMATIONS ###################
##########################################

##########################################
########## TIMEBASED ####################
##########################################
# T-2h
  - alias: leave_for_work_t2h
    trigger:
      - platform: template
        value_template: >
          {% if states.sensor.now_hour.state| int == states.input_text.config_mike_leave_for_work_hour.state | int - 2 %}
            {% if states.sensor.now_minute.state | int == states.input_text.config_mike_leave_for_work_minute.state | int %}
              true
            {% endif %}
          {% endif %}
    condition:
      - condition: state
        entity_id: input_boolean.option_notify2_prework_timebased_lights
        state: 'on'
    action:
      - service: script.notify2
        data_template:
          flood_color: "red"
          entity_id: group.timebased_flood_lights
          delay: "00:00:01"
          next_scene: 'prework_cyan'
          tts_entity_id: group.config_tts_devices
          tts_sound: 'isaac/weapon_room.mp3'
          tts_sound_delay: '00:00:05'
          tts_message: "Get ready to leave for work in. T minus 2 hours. Your iPhone is at. {{ states('sensor.iphone6s_battery') | int }}%. and your Watch is at. {{ states('sensor.watch_battery') | int }}%. I  sent your pre work checklist to telegram for review."
          tts_pause_delay: '00:00:00'
          telegram_message: |
            T-2h Batteries:
            {% if states("sensor.iphone6s_battery") | int == 100 %}*{% endif %}iPhone: {{ states("sensor.iphone6s_battery") | int }}%{% if states("sensor.iphone6s_battery") | int == 100 %}*{% endif %}
            {% if states("sensor.watch_battery") | int == 100 %}*{% endif %}Watch: {{ states("sensor.watch_battery") | int }}%{% if states("sensor.watch_battery") | int == 100 %}*{% endif %}

            T-2h Checklist:
            {% for item in states.input_select.config_array_prework_checklist_t2h.attributes.options %}
              - {{ item }}
            {%- endfor -%}


# T-1h
  - alias: leave_for_work_t1h
    trigger:
      - platform: template
        value_template: >
          {% if states.sensor.now_hour.state| int == states.input_text.config_mike_leave_for_work_hour.state | int - 1 %}
            {% if states.sensor.now_minute.state | int == states.input_text.config_mike_leave_for_work_minute.state | int %}
              true
            {% endif %}
          {% endif %}
    condition:
      - condition: state
        entity_id: input_boolean.option_notify2_prework_timebased_lights
        state: 'on'
    action:
      - service: script.notify2
        data_template:
          flood_color: "red"
          entity_id: group.timebased_flood_lights
          delay: "00:00:01"
          next_scene: 'prework_purple'
          tts_entity_id: group.config_tts_devices
          tts_sound: 'isaac/weapon_room.mp3'
          tts_sound_delay: '00:00:05'
          tts_message: "Leave for work in. T minus 1 hour.  I  sent your pre work checklist to telegram for review."
          tts_pause_delay: '00:00:00'
          telegram_message: |
            T-1h Re:
            {% for item in states.input_select.config_array_prework_checklist_t1h.attributes.options %}
              - {{ item }}
            {%- endfor -%}

# T-30m
  - alias: leave_for_work_t30m
    trigger:
      - platform: template
        value_template: >
          {% if states.sensor.now_hour.state| int == states.input_text.config_mike_leave_for_work_hour.state | int %}
            {% if states.sensor.now_minute.state | int == states.input_text.config_mike_leave_for_work_minute.state | int - 30 %}
              true
            {% endif %}
          {% endif %}
    condition:
      - condition: state
        entity_id: input_boolean.option_notify2_prework_timebased_lights
        state: 'on'
    action:
      - service: script.notify2
        data_template:
          flood_color: "red"
          entity_id: group.timebased_flood_lights
          delay: "00:00:01"
          next_scene: 'prework_red'
          tts_entity_id: group.config_tts_devices
          tts_sound: 'isaac/secret_room_find.mp3'
          tts_sound_delay: '00:00:04'
          tts_message: "Leave for work in. T minus 30 minutes."
          tts_pause_delay: '00:00:00'


# T-10m
  - alias: leave_for_work_t10m
    trigger:
      - platform: template
        value_template: >
          {% if states.sensor.now_hour.state| int == states.input_text.config_mike_leave_for_work_hour.state | int %}
            {% if states.sensor.now_minute.state | int == states.input_text.config_mike_leave_for_work_minute.state | int - 10 %}
              true
            {% endif %}
          {% endif %}
    condition:
      - condition: state
        entity_id: input_boolean.option_notify2_prework_timebased_lights
        state: 'on'
    action:
      - service: script.notify2
        data_template:
          flood_color: "red"
          entity_id: group.timebased_flood_lights
          delay: "00:00:01"
          next_scene: 'prework_t10m'
          tts_entity_id: group.config_tts_devices
          tts_sound: 'isaac/isaacbosswin.mp3'
          tts_sound_delay: '00:00:05'
          tts_message: |
            Leave for work in. T minus 10 minutes.
            Do not forget the following items:
            {% for item in states.input_select.config_array_prework_checklist_dont_forget.attributes.options %}
              {% if loop.last %}
                and {{ item }}.
              {% else %}
                {{ item }},
              {% endif %}
            {%- endfor -%}
          tts_pause_delay: '00:00:00'
          telegram_message: |
            ** DON'T FORGET **
            {% for item in states.input_select.config_array_prework_checklist_dont_forget.attributes.options %}
              - {{ item }}
            {%- endfor -%}

# T-5m
  - alias: leave_for_work_t5m
    trigger:
      - platform: template
        value_template: >
          {% if states.sensor.now_hour.state| int == states.input_text.config_mike_leave_for_work_hour.state | int %}
            {% if states.sensor.now_minute.state | int == states.input_text.config_mike_leave_for_work_minute.state | int - 5 %}
              true
            {% endif %}
          {% endif %}
    condition:
      - condition: state
        entity_id: input_boolean.option_notify2_prework_timebased_lights
        state: 'on'
    action:
      - service: script.notify2
        data_template:
          flood_color: "red"
          entity_id: group.timebased_flood_lights
          delay: "00:00:01"
          next_scene: 'day_bright'
          tts_entity_id: group.config_tts_devices
          tts_sound: 'isaac/secret_room_find.mp3'
          tts_sound_delay: '00:00:04'
          tts_message: "Leave for work in. T minus 5 minutes."
          tts_pause_delay: '00:00:00'
      - service: script.entertainment_center_turn_off

# T-0m
  - alias: leave_for_work_t0m
    trigger:
      - platform: template
        value_template: >
          {% if states.sensor.now_hour.state| int == states.input_text.config_mike_leave_for_work_hour.state | int %}
            {% if states.sensor.now_minute.state | int == states.input_text.config_mike_leave_for_work_minute.state | int %}
              true
            {% endif %}
          {% endif %}
    condition:
      - condition: state
        entity_id: input_boolean.option_notify2_prework_timebased_lights
        state: 'on'
    action:
      - service: script.notify2
        data_template:
          flood_color: "red"
          entity_id: group.timebased_flood_lights
          delay: "00:00:01"
          tts_entity_id: group.config_tts_devices
          tts_sound: 'isaac/weapon_room.mp3'
          tts_sound_delay: '00:00:05'
          tts_message: "It's time to leave for work. Have a good day. Goodbye"
          tts_pause_delay: '00:00:00'
      # Turn On - Normal Mode
      - service: input_boolean.turn_on
        entity_id: input_boolean.option_mode_normal
      - service: script.entertainment_center_turn_off
      - service: script.computer_monitors_turn_off

##########################################
########## MIKE - LEAVE FOR WORK #########
##########################################

  # Option: Mike Prework Timebased Lights Turn ON
  - alias: mike_prework_timebased_lights_on
    trigger:
      - platform: state
        entity_id: sensor.mike_work_day
        to: 'on'
      - platform: state
        entity_id: input_boolean.mode_normal
        to: 'on'
    condition:
      - condition: state
        entity_id: sensor.mike_work_day
        state: 'on'
    action:
      # Turn on Prework Timebased Lights
      - service: input_boolean.turn_on
        entity_id: input_boolean.mode_prework


  # Option: Mike Prework Timebased Lights Turn OFF
  - alias: mike_prework_timebased_lights_off
    trigger:
      - platform: state
        entity_id: sensor.mike_work_day
        to: 'off'
      - platform: state
        entity_id: input_boolean.mode_normal
        to: 'on'
      - platform: homeassistant
        event: start
    condition:
      - condition: state
        entity_id: sensor.mike_work_day
        state: 'off'
    action:
      # Turn off Prework Timebased Lights
      - service: input_boolean.turn_off
        entity_id: input_boolean.option_notify2_prework_timebased_lights

##########################################
########## MIKE OFF WORK #################
##########################################

  # Mike Off Work: T-1h
  - alias: mike_off_work_t1h
    trigger:
      - platform: template
        value_template: >
          {% if now().hour | int == states.input_text.config_mike_work_end_hour.state | int - 1 %}
            true
          {% endif %}
    condition:
      - condition: state
        entity_id: sensor.mike_at_work
        state: 'on'
      - condition: state
        entity_id: input_boolean.var_mike_home
        state: 'off'
    action:
      # Turn on Air Conditioner/Fans via Temp Control
      - condition: template
        value_template: '{% if  states.sensor.indoor_temperature.state  %}{% if states.sensor.indoor_temperature.state | float > states.sensor.indoor_temp_warm_level.state | float %}true{%endif%}{%endif%}'
      - condition: template
        value_template: '{% if  states.sensor.dark_sky_apparent_temperature.state  %}{% if states.sensor.dark_sky_apparent_temperature.state | int > 50 %}true{%endif%}{%endif%}'
      - service: input_boolean.turn_on
        entity_id: input_boolean.option_indoor_temp_hot

  # Mike Off Work: T-0h
  - alias: mike_off_work_t0h
    trigger:
      - platform: template
        value_template: >
          {% if now().hour | int == states.input_text.config_mike_work_end_hour.state | int  %}
            true
          {% endif %}
    condition:
      - condition: state
        entity_id: input_boolean.var_mike_home
        state: 'off'
    action:
      # Turn on Air Conditioner/Fans via Temp Control
      - condition: template
        value_template: '{% if  states.sensor.indoor_temperature.state  %}{% if states.sensor.indoor_temperature.state | float > states.sensor.indoor_temp_warm_level.state | float %}true{%endif%}{%endif%}'
      - condition: template
        value_template: '{% if  states.sensor.dark_sky_apparent_temperature.state  %}{% if states.sensor.dark_sky_apparent_temperature.state | int > 50 %}true{%endif%}{%endif%}'
      - service: input_boolean.turn_on
        entity_id: input_boolean.option_indoor_temp_hot

#-----------------------------------------------------#

# script:
##########################################
########## SCRIPTS #######################
##########################################

#-----------------------------------------------------#

# input_boolean:
##########################################
########## BACKEND #######################
##########################################

##########################################
########## OPTIONS #######################
##########################################

##########################################
########## CONFIG ########################
##########################################

#-----------------------------------------------------#

# homeassistant:
#   customize:
##########################################
########## EMULATED HUE ##################
##########################################
    # input_boolean.template:
    #   emulated_hue: true
    #   emulated_hue_name: "Template Name"

#-----------------------------------------------------#

group:
##########################################
############### GROUPS ###################
##########################################

##########################################
############### AUTO-GROUPS ##############
##########################################
  automation_work:
    entities:
      - automation.mike_at_work
      - automation.mike_not_at_work
      - automation.leave_for_work_t2h
      - automation.leave_for_work_t1h
      - automation.leave_for_work_t30m
      - automation.leave_for_work_t10m
      - automation.leave_for_work_t5m
      - automation.leave_for_work_t0m
      - automation.mike_off_work_t1h
      - automation.mike_off_work_t0h
      - automation.mike_prework_timebased_lights_on
      - automation.mike_prework_timebased_lights_off

  backend_work:
    entities:
      - input_boolean.var_mike_leave_for_work_timebased_lights_on

  # hidden_work:
  #   entities:


#   options_work:
#     entities:
#       - input_boolean.

#   script_work:
#     entities:
#       - script.

  sensor_work:
    entities:
      - sensor.mike_at_work
      - sensor.mike_work_day
