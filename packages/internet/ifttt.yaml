## WORKFLOW:
## IFTTT triggers an POST to dweet.
## dweet sensor displays latest topic & message.
## dweetSensor is used to trigger HA automations.
#
#
## Topic = Type (ie. 'trump_tweet' or 'breaking_news')
## Message = Message Text

##########################################
########## COMPONENTS ####################
##########################################
ifttt:
  key: !secret ifttt_key

sensor:
  - platform: dweet
    name: !secret dweet_name
    device: !secret dweet_device
    value_template: '{{ value_json.message }}'

  - platform: template
    sensors:
      dweet_vhome_topic:
        value_template: "{% set dweet_vhome = states.sensor.dweet_vhome.state.split('::') %}{{ dweet_vhome[0] }}"

      dweet_vhome_message:
        value_template: >
          {% set dweet_vhome = states.sensor.dweet_vhome.state | string | replace("https","http") %}
          {% set dweet_vhome = dweet_vhome + ":: :: " %}
          {% set dweet_vhome_split = dweet_vhome.split('::') %}
          {% set dweet_vhome_message = dweet_vhome_split[1] %}
          {{ dweet_vhome_message }}

      dweet_vhome_message2:
        value_template: >
          {% set dweet_vhome = states.sensor.dweet_vhome.state | string | replace("https","http") %}
          {% set dweet_vhome = dweet_vhome + ":: :: " %}
          {% set dweet_vhome_split = dweet_vhome.split('::') %}
          {% set dweet_vhome_message2 = dweet_vhome_split[2] %}
          {{ dweet_vhome_message2 }}

      dweet_vhome_tts_message:
        value_template: >
          {% set dweet_vhome_message = states.sensor.dweet_vhome_message.state | string | striptags | replace("RT @", "Retweet from ") %}
          {% set dweet_vhome_split = dweet_vhome_message.split("http") %}
          {% set dweet_vhome_tts_message = dweet_vhome_split[0] %}
          {{ dweet_vhome_tts_message }}

#-----------------------------------------------------#

automation:
##########################################
########## NOTIFICATIONS #################
##########################################


##########################################
########## SPORTS NOTIFICAITONS ##########
##########################################
  - alias: nfl_game_start
    trigger:
      platform: state
      entity_id: sensor.dweet_vhome_message
    condition:
      - condition: state
        entity_id: sensor.dweet_vhome_topic
        state: 'nfl_game_start'
    action:
      - service: script.notify2
        data_template:
          telegram_message: |
            *NFL GAME START:*
            {{ states.sensor.dweet_vhome_message.state }}
          tts_entity_id: group.config_tts_devices
          tts_sound: 'other/fox_football.m4a'
          tts_pause_delay: "00:00:03"
          tts_message: |
            The {% if states.sensor.dweet_vhome_message2.state %}{{ states.sensor.dweet_vhome_message2.state }}{% else %}NFL{% endif %} game has started! <break time=".9s" />
            {% set message = states.sensor.dweet_vhome_tts_message.state | replace('"','') %}
            {% set sentence = message.split('.') %}
            {{ sentence[0] }}

  - alias: nfl_game_update
    trigger:
      platform: state
      entity_id: sensor.dweet_vhome_message
    condition:
      condition: state
      entity_id: sensor.dweet_vhome_topic
      state: 'nfl_game_update'
    action:
      - service: script.notify2
        data_template:
          telegram_message: |
            *NFL GAME UPDATE:*
            {{ states.sensor.dweet_vhome_message.state }}
          tts_entity_id: group.config_tts_devices
          tts_sound: 'other/espn_alert.m4a'
          tts_pause_delay: "00:00:03"
          tts_message: |
            {% if states.sensor.dweet_vhome_message2.state %}{{ states.sensor.dweet_vhome_message2.state }}{% else %}NFL{% endif %} Game Update:
            {% set message = states.sensor.dweet_vhome_tts_message.state | replace('"','') %}
            {% set sentence = message.split('.') %}
            {{ sentence[0] }}

  - alias: nfl_game_end
    trigger:
      platform: state
      entity_id: sensor.dweet_vhome_message
    condition:
      condition: state
      entity_id: sensor.dweet_vhome_topic
      state: 'nfl_game_end'
    action:
      - service: script.notify2
        data_template:
          telegram_message: |
            *NFL GAME ENDED:*
            {{ states.sensor.dweet_vhome_message.state }}
          tts_entity_id: group.config_tts_devices
          tts_sound: 'other/espn_alert.m4a'
          tts_pause_delay: "00:00:03"
          tts_message: |
            {% set message = states.sensor.dweet_vhome_tts_message.state | replace('"','') | replace("Final: ","") %}
            {% set sentence = message.split('.') %}
            {% set words = sentence[0].split(' ') %}
            {% set team1 = words[0] %}
            {% set team1_score = words[1] %}
            {% set team2 = words[2] %}
            {% set team2_score = words[3] %}

            The {% if states.sensor.dweet_vhome_message2.state %}{{ states.sensor.dweet_vhome_message2.state }}{% else %}NFL{% endif %} game has ended with. the {{ team1 }}, winning over  the {{ team2 }},  {{ team1_score }} to {{ team2_score }}.
      - condition: template
        value_template: >
            {% set message = states.sensor.dweet_vhome_tts_message.state | replace('"','') | replace("Final: ","") %}
            {% set sentence = message.split('.') %}
            {% set words = sentence[0].split(' ') %}
            {% set team1 = words[0] %}
            {{ team1 == "Packers" }}
      - delay: '00:00:01'
      - service: script.notify2
        data_template:
          flood_color: 'green'
          blink_color: 'gold'

# ##########################################
# ########## TWITTER NOTIFICATIONS #########
# ##########################################
#
  - alias: breaking_news
    trigger:
      platform: state
      entity_id: sensor.dweet_vhome_message
    condition:
      - condition: state
        entity_id: sensor.dweet_vhome_topic
        state: 'breaking_news'
      - condition: template
        value_template: >
          {% set msg = states.sensor.dweet_vhome_message.state | lower %}
          {{ "breaking:" in msg or "just in:" in msg or "update:" in msg or "happening now:" in msg or "breaking news:" in msg or "president trump:" in msg or "trump:" in msg or "shooting:" in msg or "attack:" in msg }}
    action:
      - service: script.notify2
        data_template:
          telegram_message: |
            *BREAKING NEWS:*
            {{ states.sensor.dweet_vhome_message.state }}
          tts_entity_id: group.config_tts_devices
          tts_sound: 'other/breaking_news.m4a'
          tts_pause_delay: "00:00:03"
          tts_message: |
            {{ states.sensor.dweet_vhome_tts_message.state }}


  - alias: trump_tweet
    trigger:
      platform: state
      entity_id: sensor.dweet_vhome_message
    condition:
      condition: state
      entity_id: sensor.dweet_vhome_topic
      state: 'trump_tweet'
    action:
      - service: script.notify2
        data_template:
          telegram_message: |
            *TRUMP:*
            {{ states.sensor.dweet_vhome_message.state }}
          tts_entity_id: group.config_tts_devices
          tts_sound: 'other/hailt_to_the_chief.m4a'
          tts_pause_delay: "00:00:03"
          tts_message: |
            President Trump just tweeted... <break time=".9s" /> {{ states.sensor.dweet_vhome_tts_message.state  }}

##########################################
########## AUTOMATIONS ###################
##########################################

#-----------------------------------------------------#

##########################################
########## SCRIPTS #######################
##########################################
script:
  find_my_phone:
    alias: "Find My Phone"
    sequence:
    - service: ifttt.trigger
      data:
        event: "find_my_phone"
    - service: script.breathe_light
      data:
        breathe_color: "cyan"
        entity_id: group.all_lights
    - delay: "00:00:07"
    - service: script.flood_light
      data:
        flood_color: "white"
        entity_id: group.all_lights
        delay: "00:00:20"

#-----------------------------------------------------#

# input_boolean:
##########################################
########## BACKEND #######################
##########################################

##########################################
########## OPTIONS #######################
##########################################

##########################################
########## CONFIG ########################
##########################################

#-----------------------------------------------------#

homeassistant:
  customize:
##########################################
########## EMULATED HUE ##################
##########################################
    script.find_my_phone:
      emulated_hue: true
      emulated_hue_name: "find my phone"

#-----------------------------------------------------#

group:
##########################################
############### GROUPS ###################
##########################################

##########################################
############### AUTO-GROUPS ##############
##########################################
  automation_ifttt:
    entities:
      - automation.breaking_news
      - automation.nfl_game_start
      - automation.nfl_game_update
      - automation.nfl_game_end
      - automation.trump_tweet

  # backend_ifttt:
  #   entities:
#       - input_boolean.

#   hidden_ifttt:
#     entities:
#       - input_boolean.

#   options_ifttt:
#     entities:
#       - input_boolean.

  script_ifttt:
    entities:
      - script.find_my_phone

  sensor_ifttt:
    entities:
      - sensor.dweet_vhome
      - sensor.dweet_vhome_topic
      - sensor.dweet_vhome_tts_message
      - sensor.dweet_vhome_message
