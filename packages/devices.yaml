homeassistant:
  customize:
    script.computer_monitors_turn_off:
      emulated_hue: true
      emulated_hue_name: "computer"

sensor:
  - platform: template
    sensors:
      iphone6s_battery:
        friendly_name: "iPhone6s"
        unit_of_measurement: '%'
        value_template: >-
            {%- if states.device_tracker.iphone6s %}
                {{ states.device_tracker.iphone6s.attributes.battery }}
            {%- endif %}

      ipad_battery:
        friendly_name: "iPad"
        unit_of_measurement: '%'
        value_template: >-
            {%- if states.device_tracker.ipad %}
                {{ states.device_tracker.ipad.attributes.battery }}
            {% else %}
            {%- endif %}

      watch_battery:
        friendly_name: "Apple Watch"
        unit_of_measurement: '%'
        value_template: >-
            {%- if states.device_tracker.watch %}
                {{ states.device_tracker.watch.attributes.battery }}
            {% else %}
            {%- endif %}


device_tracker:
  - platform: ddwrt
    host: !secret ddwrt_host
    username: !secret ddwrt_username
    password: !secret ddwrt_password
    interval_seconds: 4
    consider_home: 900
    track_new_devices: yes

  - platform: icloud
    username: !secret ic_username
    password: !secret ic_password
    account_name: !secret ic_account_name

  # - platform: bluetooth_tracker
  #   track_new_devices: yes
  #   interval_seconds: 10
  #   consider_home: 900

automation:
##########################################
########## NOTIFICATIONS #################
##########################################

  #********** Batteries ***************************************#
  - alias: battery_low_notification
    trigger:
      #iPhone Battery
      - platform: template
        value_template: "{{ states('sensor.iphone6s_battery') | int < 25 and states('sensor.iphone6s_battery') | int > 0 }}"
      - platform: template
        value_template: "{{ states('sensor.iphone6s_battery') | int < 10 and states('sensor.iphone6s_battery') | int > 0 }}"
      #iPad Battery
      - platform: template
        value_template: "{{ states('sensor.ipad_battery') | int < 25 and states('sensor.ipad_battery') | int > 0 }}"
      - platform: template
        value_template: "{{ states('sensor.ipad_battery') | int < 10 and states('sensor.ipad_battery') | int > 0 }}"
      #Watch Battery
      - platform: template
        value_template: "{{ states('sensor.watch_battery') | int < 25 and states('sensor.watch_battery') | int > 0 }}"
      - platform: template
        value_template: "{{ states('sensor.watch_battery') | int < 10 and states('sensor.watch_battery') | int > 0 }}"
    action:
      - condition: template
        value_template: >
          {% if states.automation.battery_low_notification.attributes.last_triggered and states.automation.battery_low_notification.attributes.last_triggered != 'None' %}
            {% if (as_timestamp(now())-as_timestamp(states.automation.battery_low_notification.attributes.last_triggered)) > (1 * 30 * 60)  %}
              true
            {% else %}
              false
            {% endif %}
          {%else%}
            true
          {%endif%}
      - service: script.notify2
        data_template:
          telegram_message: >
            Battery Low!
            {% if states("sensor.iphone6s_battery") | int < 25 %}*{% endif %}iPhone: {{ states("sensor.iphone6s_battery") | int }}%{% if states("sensor.iphone6s_battery") | int < 25 %}*{% endif %} |  {% if states("sensor.watch_battery") | int < 25 %}*{% endif %}Watch: {{ states("sensor.watch_battery") | int }}%{% if states("sensor.watch_battery") | int < 25 %}*{% endif %} | {% if states("sensor.ipad_battery") | int < 25 %}*{% endif %}iPad: {{ states("sensor.ipad_battery") | int }}%{% if states("sensor.ipad_battery") | int < 25 %}*{% endif %}
      - condition: template
        value_template: >
          {% if trigger.to_state.state | int <= 10 %}
            true
          {% else %}
            false
          {% endif %}
      - service: script.notify2
        data_template:
          flood_color: "cyan"
          blink_color: "blueviolet"
          blink_color2: "red"
          tts_entity_id: group.tts_devices
          tts_sound: 'intercom_ds9.mp3'
          tts_message: >
            Battery low!
            {% if states("sensor.iphone6s_battery") | int < 50 and states('sensor.iphone6s_battery') | int > 0 %}iPhone: {{ states("sensor.iphone6s_battery") | int }}%{% endif %}
            {% if states("sensor.watch_battery") | int < 50 and states('sensor.watch_battery') | int > 0  %}Watch: {{ states("sensor.watch_battery") | int }}%{% endif %}
            {% if states("sensor.ipad_battery") | int < 50 and states('sensor.ipad_battery') | int > 0 %}iPad: {{ states("sensor.ipad_battery") | int }}%{% endif %}

  - alias: battery_fully_charged_text_only
    trigger:
      - platform: state
        entity_id:
          - sensor.iphone6s_battery
          - sensor.watch_battery
        state: '100.0'
    action:
      - condition: time
        before: "22:59:59"
      - service: script.notify2
        data_template:
          telegram_message: |
            Battery Fully Charged!
            {% if states("sensor.iphone6s_battery") | int == 100 %}*{% endif %}iPhone: {{ states("sensor.iphone6s_battery") | int }}%{% if states("sensor.iphone6s_battery") | int == 100 %}*{% endif %} |  {% if states("sensor.watch_battery") | int == 100 %}*{% endif %}Watch: {{ states("sensor.watch_battery") | int }}%{% if states("sensor.watch_battery") | int == 100 %}*{% endif %}

  - alias: 10pm_charge_battery_reminder
    trigger:
      - platform: time
        at: '22:00:00'
    action:
      - condition: time
        before: "22:59:59"
      - service: script.notify2
        data_template:
          telegram_message: |
            10pm Re:
            {% if states("sensor.iphone6s_battery") | int == 100 %}*{% endif %}iPhone: {{ states("sensor.iphone6s_battery") | int }}%{% if states("sensor.iphone6s_battery") | int == 100 %}*{% endif %}
            {% if states("sensor.watch_battery") | int == 100 %}*{% endif %}Watch: {{ states("sensor.watch_battery") | int }}%{% if states("sensor.watch_battery") | int == 100 %}*{% endif %}


  #********** Device Connected ***************************************#
  - alias: new_device_found
    trigger:
      platform: event
      event_type: device_tracker_new_device
    action:
      - service: script.notify2
        data_template:
          telegram_message: |
            *New Device Found!*
            host_name     *{{trigger.event.data.host_name}}*
            mac_address  *{{trigger.event.data.mac}}*
            entity_id       {{trigger.event.data.entity_id}}


##########################################
########## AUTOMATIONS ###################
##########################################
  #********** Mike Presence ***********#
  - alias: mike_away
    trigger:
      - platform: state
        entity_id: device_tracker.iphone6s
        state: 'not_home'
        for:
          minutes: 5
    condition:
      - condition: state
        entity_id: input_boolean.var_mike_home
        state: 'on'
      - condition: state
        entity_id: device_tracker.dans_iphone6
        state: 'not_home'
    action:
      - service: homeassistant.turn_off
        entity_id: input_boolean.var_mike_home
      - service: script.notify2
        data:
          telegram_message: "var_mike_home = 'off'"

  - alias: mike_home
    trigger:
      - platform: state
        entity_id: device_tracker.iphone6s
        state: 'home'
      - platform: state
        entity_id: device_tracker.watch
        state: 'home'
      - platform: state
        entity_id: device_tracker.dans_iphone6
        state: 'home'
    condition:
      - condition: state
        entity_id: input_boolean.var_mike_home
        state: 'off'
    action:
      - service: homeassistant.turn_on
        entity_id: input_boolean.var_mike_home

  #********** Dan Presence ***************************************#
  - alias: dan_away
    trigger:
      - platform: state
        entity_id: device_tracker.dans_iphone6
        state: 'not_home'
        for:
          minutes: 15
    condition:
      - condition: state
        entity_id: input_boolean.var_dan_home
        state: 'on'
    action:
      - service: homeassistant.turn_off
        entity_id: input_boolean.var_dan_home

  - alias: dan_home
    trigger:
      - platform: state
        entity_id: device_tracker.dans_iphone6
        state: 'home'
    condition:
      - condition: state
        entity_id: input_boolean.var_dan_home
        state: 'off'
    action:
      - service: homeassistant.turn_on
        entity_id: input_boolean.var_dan_home

##########################################
########## SCRIPTS #######################
##########################################
script:
  computer_monitors_turn_off:
    sequence:
      - service: shell_command.computer_monitors_turn_off

##########################################
########## SHELL COMMANDS #######################
##########################################
shell_command:
  computer_monitors_turn_off: ssh acer@192.168.1.85 xset -display :0.0 dpms force off && ssh martokk@desktop xset -display :0.0 dpms force off


##########################################
############### GROUPS ###################
##########################################
group:
  devices:
    name: "Devices"
    entities:
    - device_tracker.iphone6s
    - device_tracker.watch
    - device_tracker.echo_dot
    - device_tracker.esp8266_kitchen
    - device_tracker.esp8266_office
    - device_tracker.esp8266_tables
    - device_tracker.esp8266_entertainment_center
    - device_tracker.esp8266_bedroom
    - device_tracker.sonoff_small_desk_fan1
    - device_tracker.sonoff_box_fan1
    - device_tracker.sonoff_entertainment_center
    - device_tracker.sonoff_silver_lamp

  batteries:
    name: "Batteries"
    entities:
    - sensor.iphone6s_battery
    - sensor.watch_battery
    - sensor.ipad_battery

  automation_devices:
    entities:
      - automation.battery_low_notification
      - automation.battery_fully_charged_text_only
      - automation.10pm_charge_battery_reminder
      - automation.new_device_found
      - automation.mike_away
      - automation.mike_home
      - automation.dan_away
      - automation.dan_home

  script_devices:
    entities:
      - script.computer_monitors_turn_off
