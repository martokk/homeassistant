# homeassistant:
#   customize:
    # input_boolean.template:
    #   emulated_hue: true
    #   emulated_hue_name: "Template Name"
# switch:
# lights:
# binary_sensor:

google:
  client_id: !secret google_client_id
  client_secret: !secret google_client_secret


sensor:
  - platform: template
    sensors:
      upcoming_packers_event:
        friendly_name: 'Packers Game'
        value_template: >-
            {%- if states.calendar.green_bay_packers %}
                {{ states.calendar.green_bay_packers.attributes.message }}
            {% else %}

            {%- endif %}

      upcoming_packers_start_time:
        value_template: >-
            {%- if states.calendar.green_bay_packer %}
                {{ states.calendar.green_bay_packers.attributes.start_time }}
            {% else %}

            {%- endif %}

      upcoming_bears_event:
        friendly_name: 'Bears Game'
        value_template: >-
            {%- if states.calendar.chicago_bears %}
                {{ states.calendar.chicago_bears.attributes.message }}
            {% else %}

            {%- endif %}

      upcoming_bears_start_time:
        value_template: >-
            {%- if states.calendar.chicago_bears %}
                {{ states.calendar.chicago_bears.attributes.start_time }}
            {% else %}

            {%- endif %}

      upcoming_twit_event:
        friendly_name: 'Twit.tv '
        value_template: >-
            {%- if states.calendar.twit_live_schedule %}
                {{ states.calendar.twit_live_schedule.attributes.message }}
            {% else %}

            {%- endif %}

      upcoming_twit_start_time:
        value_template: >-
            {%- if states.calendar.twit_live_schedule %}
                {{ states.calendar.twit_live_schedule.attributes.start_time }}
            {% else %}

            {%- endif %}

      mike_at_work:
        value_template: >
          {% set work_week = ['mon', 'tue', 'wed', 'thu', 'fri'] %}{#### If 3rd Shift, include last day that you are actualy off #####}
          {% set third_shift = true %}
          {% set today = now().strftime("%a") | lower%}
          {% set hour = now().hour %}


          {####### 3rd Shift ##########}
          {% if third_shift %}
            {####### Check Time ##########}
            {% if hour | int >= states.input_slider.var_mike_work_start_hour.state | int or hour | int < states.input_slider.var_mike_work_end_hour.state | int %}
              {####### Check Day ##########}
              {% if today in work_week %}
                {###### Check First/Last Day ######}
                {% if today ==  work_week | first and hour | int < states.input_slider.var_mike_work_end_hour.state | int %}
                  off
                {% elif today ==  work_week | last and hour | int >= states.input_slider.var_mike_work_start_hour.state | int %}
                  off
                {% else %}
                  on
                {% endif %}
              {% endif %}
            {% endif %}

          {####### Day Shift ##########}
          {% else %}
            {####### Check Time ##########}
            {% if hour | int >= states.input_slider.var_mike_work_start_hour.state | int and hour | int < states.input_slider.var_mike_work_end_hour.state | int %}
              {####### Check Day ##########}
              {% if today in work_week %}
                on
              {% endif %}
            {% endif %}

          {% endif %}

      mike_work_day:
        value_template: >
          {% set work_week = ['mon', 'tue', 'wed', 'thu'] %}
          {% set today = now().strftime("%a") | lower%}

          {% if today in work_week %}
            on
          {% else %}
            off
          {% endif %}


automation:
##########################################
########## NOTIFICATIONS #################
##########################################
  - alias: 505_checklist1
    trigger:
      - platform: time
        at: '17:05:00'
    condition:
      - condition: state
        entity_id: sensor.mike_work_day
        state: 'on'
    action:
      - service: script.notify2
        data_template:
          telegram_message: |
            5:05pm Re:
            - Clear Eyes
            - Deodorant
            - Cologne
            - Dishes
            - Clean
            - Vitamins
            - Fill e-Cig
            - Eat Something
            - Ready Lunch
          tts_message: >
            It's 5:05pm. Heres your checklist reminder:
            - Clear Eyes
            - Deodorant
            - Cologne
            - Dishes
            - Clean
            - Vitamins
            - Fill e-Cig
            - Eat Something
            - Ready Lunch

  - alias: 540_checklist2
    trigger:
      - platform: time
        at: '17:40:00'
    condition:
      - condition: state
        entity_id: sensor.mike_work_day
        state: 'on'
    action:
      - service: script.notify2
        data_template:
          telegram_message: |
            5:40pm Re:
            - Lunch
            - Vitamins
            - Cigarettes/Lighter
            - Wallet
            - Keys
            - ID Badge
            - Phone & Watch
          tts_message: >
            It's 5:40pm. Don't forget to bring the following items into work:
            - Lunch
            - Vitamins
            - Cigarettes/Lighter
            - Wallet
            - Keys
            - ID Badge
            - Phone & Watch

##########################################
########## AUTOMATIONS ###################
##########################################
  - alias: mike_at_work
    trigger:
      - platform: time
        minutes: 31
        seconds: 00
      - platform: state
        entity_id: input_boolean.var_mike_home
        from: 'on'
        to: 'off'
    condition:
      - condition: state
        entity_id: sensor.mike_at_work
        state: 'on'
    action:
      - service: input_boolean.turn_on
        entity_id: input_boolean.var_mike_at_work

  - alias: mike_not_at_work
    trigger:
        ## Change if working first shift
      - platform: template
        value_template: '{{ now().hour | int < states.input_slider.var_mike_work_start_hour.state | int and now().hour | int > states.input_slider.var_mike_work_end_hour.state | int }}'
    action:
      - service: input_boolean.turn_off
        entity_id: input_boolean.var_mike_at_work

  - alias: mike_at_work_4am_turn_on_air_conditoiner
    trigger:
      - platform: time
        at: '04:00:00'
    condition:
      - condition: state
        entity_id: sensor.mike_at_work
        state: 'on'
      - condition: template
        value_template: '{{ states.sensor.indoor_temperature.state | int > 70 }}'
    action:
      - service: switch.turn_on
        entity_id: switch.air_conditioner

##########################################
########## SCRIPTS #######################
##########################################
# script:





##########################################
########## STORED VARIABLES ##############
##########################################
input_boolean:
  var_mike_at_work:
    initial: 'off'

input_slider:
  var_mike_work_start_hour:
    initial: 18
    min: 0
    max: 23
    step: 1

  var_mike_work_end_hour:
    initial: 5
    min: 0
    max: 23
    step: 1



##########################################
########## OPTIONS #######################
##########################################


##########################################
############### GROUPS ###################
##########################################
group:
  google_calandars:
    name: "Google Calendars"
    entities:
      - calendar.default
      - calendar.twit_live_schedule
      - calendar.green_bay_packers
      - calendar.chicago_bears
      - calendar.subspace_radio
      - calendar.rev_20
      - calendar.stardates

  upcoming_events:
    name: "Upcoming Events"
    entities:
      - sensor.upcoming_packers_event
      - sensor.upcoming_packers_start_time
      - sensor.upcoming_bears_event
      - sensor.upcoming_bears_start_time
      - sensor.upcoming_twit_event
      - sensor.upcoming_twit_start_time

  automation_calandar:
    entities:
      - automation.mike_at_work
      - automation.mike_not_at_work

  backend_calandar:
    entities:
      - input_boolean.var_mike_at_work
      - input_slider.var_mike_work_start_hour
      - input_slider.var_mike_work_end_hour

  # options_calandar:
  #   entities:


  # script_calandar:
  #   entities:
