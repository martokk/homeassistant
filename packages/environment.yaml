homeassistant:
  customize:
    input_boolean.option_turn_on_fans:
      emulated_hue: true
      emulated_hue_name: "All Fans"
    input_boolean.option_turn_on_air_conditioner:
      emulated_hue: true
      emulated_hue_name: "Air Conditioner"
    script.fix_air_conditioner_sync:
      emulated_hue: true
      emulated_hue_name: "Fix Air Conditioner"

switch:
  - platform: mqtt
    name: air_conditioner
    command_topic: "device/office/ir_send"
    payload_on: "0x10AF8877"
    payload_off: "0x10AF8877"


##########################################
########## SENSORS #######################
##########################################
sensor:
  - platform: template
    sensors:
      indoor_temperature:
        friendly_name: "Indoor Temperature"
        unit_of_measurement: 'ºF'
        value_template: >-
          {% set temp = 0.0 %}
          {% set c = 0 %}
          {% if states.sensor.kitchen_temperature %}
            {% if states.sensor.kitchen_temperature.state | float > 1.0 %}
              {% if (as_timestamp(now())-as_timestamp(states.sensor.kitchen_temperature.last_changed)) < (2 * 60 * 60)  %}
                {% set temp = temp + states.sensor.kitchen_temperature.state | float %}
                {% set c = c + 1 %}
              {% endif %}
            {% endif %}
          {% endif %}
          {% if states.sensor.tables_temperature %}
            {% if states.sensor.tables_temperature.state | float > 1.0 %}
              {% if (as_timestamp(now())-as_timestamp(states.sensor.tables_temperature.last_changed)) < (2 * 60 * 60)  %}
                {% set temp = temp + states.sensor.tables_temperature.state | float %}
                {% set c = c + 1 %}
              {% endif %}
            {% endif %}
          {% endif %}
          {% if states.sensor.bedroom_temperature %}
            {% if (as_timestamp(now())-as_timestamp(states.sensor.bedroom_temperature.last_changed)) < (2 * 60 * 60)  %}
              {% if states.sensor.bedroom_temperature.state | float > 1.0 %}
                {% set temp = temp + states.sensor.bedroom_temperature.state | float %}
                {% set c = c + 1 %}
              {% endif %}
            {% endif %}
          {% endif %}
          {% if states.sensor.office_temperature %}
            {% if (as_timestamp(now())-as_timestamp(states.sensor.office_temperature.last_changed)) < (2 * 60 * 60)  %}
              {% if states.sensor.office_temperature.state | float > 1.0 %}
                {% set temp = temp + states.sensor.office_temperature.state | float %}
                {% set c = c + 1 %}
              {% endif %}
            {% endif %}
          {% endif %}
          {% if c > 0 %}
           {{ (temp / c) | round(1) | float }}
          {% endif %}

      indoor_humidity:
        friendly_name: "Indoor Humidity"
        unit_of_measurement: '%'
        value_template: >-
          {% set humidity = 0.0 %}
          {% set c = 0 %}
          {% if states.sensor.kitchen_humidity %}
            {% if states.sensor.kitchen_humidity.state | float > 1.0 %}
              {% if (as_timestamp(now())-as_timestamp(states.sensor.kitchen_humidity.last_changed)) < (60 * 60)  %}
                {% set humidity = humidity + states.sensor.kitchen_humidity.state | float %}
                {% set c = c + 1 %}
              {% endif %}
            {% endif %}
          {% endif %}
          {% if states.sensor.tables_humidity %}
            {% if states.sensor.tables_humidity.state | float > 1.0 %}
              {% if (as_timestamp(now())-as_timestamp(states.sensor.tables_humidity.last_changed)) < (60 * 60)  %}
                {% set humidity = humidity + states.sensor.tables_humidity.state | float %}
                {% set c = c + 1 %}
              {% endif %}
            {% endif %}
          {% endif %}
          {% if states.sensor.bedroom_humidity %}
            {% if states.sensor.bedroom_humidity.state | float > 1.0 %}
              {% if (as_timestamp(now())-as_timestamp(states.sensor.bedroom_humidity.last_changed)) < (60 * 60)  %}
                {% set humidity = humidity + states.sensor.bedroom_humidity.state | float %}
                {% set c = c + 1 %}
              {% endif %}
            {% endif %}
          {% endif %}
          {% if c > 0 %}
           {{ (humidity / c) | round(1) | float }}
          {% endif %}

automation:
##########################################
############## NOTIFICATIONS #############
##########################################
  - alias: indoor_temp_warm_notification
    trigger:
      - platform: template
        value_template: "{% if states.sensor.indoor_temperature.state | int > states.input_slider.option_indoor_temp_warm.state | int %}true{%endif%}"
    action:
      - condition: template
        value_template: >
          {% if states.automation.indoor_temp_warm.attributes.last_triggered %}
            {% if (as_timestamp(now())-as_timestamp(states.automation.indoor_temp_warm.attributes.last_triggered)) > (2 * 60 * 60)  %}
              true
            {% endif %}
          {%else%}
            true
          {%endif%}
      - service: script.notify2
        data_template:
          telegram_message: |
            *Indoor Temp Warm: {{ states.sensor.indoor_temperature.state | round(1) }}°F*
            Kitchen: {{ states.sensor.kitchen_temperature.state | round(1) }}°F   |   Tables: {{ states.sensor.tables_temperature.state | round(1) }}°F   |   EC: {{ states.sensor.entertainment_center_temperature.state | round(1) }}°F    |   Bedroom: {{ states.sensor.bedroom_temperature.state | round(1) }}°F
          flood_color: "gold"
          blink_color: "white"
          blink_color2: "red"
          tts_entity_id: group.tts_devices
          tts_sound: 'intercom_ds9.mp3'
          tts_message: "It's getting warm in here! The indoor temperature is {{ states.sensor.indoor_temperature.state | round(0) }}°F"

  - alias: indoor_temp_cold_notification
    trigger:
      - platform: template
        value_template: "{% if states.sensor.indoor_temperature.state | int < states.input_slider.option_indoor_temp_cold.state | int %}true{%endif%}"
    action:
      - condition: template
        value_template: >
          {% if states.automation.indoor_temp_cold.attributes.last_triggered %}
            {% if (as_timestamp(now())-as_timestamp(states.automation.indoor_temp_cold.attributes.last_triggered)) > (2 * 60 * 60)  %}
              true
            {% endif %}
          {%else%}
            true
          {%endif%}
      - service: script.notify2
        data_template:
          telegram_message: |
            *Indoor Temp COLD: {{ states.sensor.indoor_temperature.state | round(1) }}°F*
            Kitchen: {{ states.sensor.kitchen_temperature.state | round(1) }}°F   |   Tables: {{ states.sensor.tables_temperature.state | round(1) }}°F   |   EC: {{ states.sensor.entertainment_center_temperature.state | round(1) }}°F    |   Bedroom: {{ states.sensor.bedroom_temperature.state | round(1) }}°F
          flood_color: "gold"
          blink_color: "white"
          blink_color2: "deepskyblue"
          tts_entity_id: group.tts_devices
          tts_sound: 'intercom_ds9.mp3'
          tts_message: "It's getting cold in here! The indoor temperature is {{ states.sensor.indoor_temperature.state | round(0) }}°F"

  - alias: bedroom_temperature_cold_after_9pm
    trigger:
      - platform: template
        value_template: "{% if states.sensor.bedroom_temperature.state | int < states.input_slider.option_indoor_temp_cold.state | int and states.sensor.bedroom_temperature.state | int > 1 %}true{%endif%}"
    condition:
      - condition: state
        entity_id: input_boolean.var_mike_home
        state: 'on'
      - condition: time
        after: '21:00:00'
    action:
      - condition: template
        value_template: >
          {% if states.automation.indoor_temp_cold.attributes.last_triggered %}
            {% if (as_timestamp(now())-as_timestamp(states.automation.indoor_temp_cold.attributes.last_triggered)) > (0 * 30 * 60)  %}
              true
            {% endif %}
          {%else%}
            true
          {%endif%}
      - service: script.notify2
        data_template:
          telegram_message: |
            Close bedroom window!
            *Bedroom: {{ states.sensor.bedroom_temperature.state | round(1) }}°F*

##########################################
########## AUTOMATIONS ###################
##########################################

  #********** Indoor Temp ***************************************#
  - alias: set_indoor_temp_hot
    trigger:
      - platform: template
        value_template: '{% if states.sensor.indoor_temperature.state | float > states.input_slider.option_indoor_temp_hot.state | float %}true{%endif%}'
    condition:
      - condition: state
        entity_id: input_boolean.var_indoor_temp_hot
        state: 'off'
    action:
      - service: input_boolean.turn_on
        entity_id: input_boolean.var_indoor_temp_hot

  - alias: set_indoor_temp_warm
    trigger:
      - platform: template
        value_template: '{% if states.sensor.indoor_temperature.state | float > states.input_slider.option_indoor_temp_warm.state | float %}true{%endif%}'
    condition:
      - condition: state
        entity_id: input_boolean.var_indoor_temp_warm
        state: 'off'
    action:
      - service: input_boolean.turn_on
        entity_id: input_boolean.var_indoor_temp_warm

  - alias: set_indoor_temp_ok
    trigger:
      - platform: template
        value_template: '{% if states.sensor.indoor_temperature.state | float < states.input_slider.option_indoor_temp_warm.state | float %}true{%endif%}'
    condition:
      - condition: state
        entity_id: input_boolean.var_indoor_temp_ok
        state: 'off'
    action:
      - service: input_boolean.turn_on
        entity_id: input_boolean.var_indoor_temp_ok


  - alias: indoor_temp_hot
    trigger:
      - platform: state
        entity_id: input_boolean.var_indoor_temp_hot
        state: 'on'
    action:
      - service: input_boolean.turn_off
        entity_id: input_boolean.var_indoor_temp_ok
      - service: input_boolean.turn_off
        entity_id: input_boolean.var_indoor_temp_warm

  - alias: indoor_temp_warm
    trigger:
      - platform: state
        entity_id: input_boolean.var_indoor_temp_warm
        state: 'on'
    action:
      - service: input_boolean.turn_off
        entity_id: input_boolean.var_indoor_temp_ok
      - service: input_boolean.turn_off
        entity_id: input_boolean.var_indoor_temp_hot

  - alias: indoor_temp_ok
    trigger:
      - platform: state
        entity_id: input_boolean.var_indoor_temp_ok
        state: 'on'
    action:
      - service: input_boolean.turn_off
        entity_id: input_boolean.var_indoor_temp_warm
      - service: input_boolean.turn_off
        entity_id: input_boolean.var_indoor_temp_hot

  - alias: circulate_air_start
    trigger:
      - platform: time
        hours: '/1'
        minutes: 30
        seconds: 00
    condition:
      - condition: time
        after: "08:00:00"
        before: "21:00:00"
      - condition: template
        value_template: '{% if states.sensor.indoor_temperature.state | float > states.input_slider.option_indoor_temp_cold.state | float + 3  %}true{%endif%}'
      - condition: state
        entity_id: input_boolean.option_circulate_air
        state: 'on'
    action:
      - service: input_boolean.turn_on
        entity_id: input_boolean.var_circulate_air_on
      - delay: '00:05:00'
      - service: input_boolean.turn_off
        entity_id: input_boolean.var_circulate_air_on

  #********** Fans On/Off ***************************************#
  - alias: fans_turn_on
    trigger:
      - platform: state
        entity_id: input_boolean.var_indoor_temp_warm
        state: 'on'
      - platform: state
        entity_id: input_boolean.var_indoor_temp_hot
        state: 'on'
      - platform: state
        entity_id: input_boolean.var_smoke_session_on
        state: 'on'
      - platform: state
        entity_id: input_boolean.var_circulate_air_on
        state: 'on'
      - platform: state
        entity_id: input_boolean.option_turn_on_fans
        state: 'on'
    action:
      - service: switch.turn_on
        entity_id: switch.sonoff_small_desk_fan1
      - service: switch.turn_on
        entity_id: switch.sonoff_box_fan1

  - alias: fans_turn_off
    trigger:
      - platform: state
        entity_id: input_boolean.var_indoor_temp_ok
        state: 'on'
      - platform: state
        entity_id: input_boolean.var_smoke_session_on
        state: 'off'
      - platform: state
        entity_id: input_boolean.var_circulate_air_on
        state: 'off'
      - platform: state
        entity_id: input_boolean.option_turn_on_fans
        state: 'off'
    condition:
      - condition: state
        entity_id: input_boolean.var_indoor_temp_ok
        state: 'on'
      - condition: state
        entity_id: input_boolean.var_smoke_session_on
        state: 'off'
      - condition: state
        entity_id: input_boolean.var_circulate_air_on
        state: 'off'
      - condition: state
        entity_id: input_boolean.option_turn_on_fans
        state: 'off'
    action:
      - service: switch.turn_off
        entity_id: switch.sonoff_small_desk_fan1
      - service: switch.turn_off
        entity_id: switch.sonoff_box_fan1

  #********** Air Conditioner On/Off ***************************************#
  - alias: air_conditioner_turn_on
    trigger:
      - platform: state
        entity_id: input_boolean.var_indoor_temp_hot
        state: 'on'
      - platform: state
        entity_id: input_boolean.option_turn_on_air_conditioner
        state: 'on'
    condition:
      - condition: state
        entity_id: switch.air_conditioner
        state: 'off'
    action:
      - service: switch.turn_on
        entity_id: switch.air_conditioner

  - alias: air_conditioner_turn_off
    trigger:
      - platform: state
        entity_id: input_boolean.var_indoor_temp_ok
        state: 'on'
      - platform: state
        entity_id: input_boolean.option_turn_on_air_conditioner
        state: 'off'
    condition:
      - condition: state
        entity_id: input_boolean.var_indoor_temp_ok
        state: 'on'
      - condition: state
        entity_id: input_boolean.option_turn_on_air_conditioner
        state: 'off'
      - condition: state
        entity_id: switch.air_conditioner
        state: 'on'
    action:
      - service: switch.turn_off
        entity_id: switch.air_conditioner

  #********** Fans Volume Adjustment ***************************************#
  - alias: fan_on_chromecast_volume_up
    trigger:
      - platform: state
        entity_id: switch.sonoff_small_desk_fan1
        state: 'on'
    condition:
      - condition: state
        entity_id: switch.sonoff_entertainment_center
        state: 'on'
    action:
      - service: script.set_entertainment_center_tv_volume
        data:
          volume_up: 2

  - alias: fan_off_chromecast_volume_down
    trigger:
      - platform: state
        entity_id: switch.sonoff_small_desk_fan1
        state: 'off'
    condition:
      - condition: state
        entity_id: switch.sonoff_entertainment_center
        state: 'on'
    action:
      - service: script.set_entertainment_center_tv_volume
        data:
          volume_down: 2


  #********** Air Conditioner Volume Adjustment ***************************************#
  - alias: air_conditioner_on_chromecast_volume_up
    trigger:
      - platform: state
        entity_id: switch.air_conditioner
        state: 'on'
    condition:
      - condition: state
        entity_id: switch.sonoff_entertainment_center
        state: 'on'
    action:
      - delay: '00:00:01'
      - service: script.set_entertainment_center_tv_volume
        data:
          volume_up: 2

  - alias: air_conditioner_off_chromecast_volume_down
    trigger:
      - platform: state
        entity_id: switch.air_conditioner
        state: 'off'
    condition:
      - condition: state
        entity_id: switch.sonoff_entertainment_center
        state: 'on'
    action:
      - delay: '00:00:01'
      - service: script.set_entertainment_center_tv_volume
        data:
          volume_down: 2


script:
  fix_air_conditioner_sync:
    sequence:
      - service: mqtt.publish
        data_template:
          topic: "device/office/ir_send"
          payload: "0x10AF8877"

##########################################
########## STORED VARIABLES ##############
##########################################
input_boolean:
  var_indoor_temp_hot:
  var_indoor_temp_warm:
  var_indoor_temp_ok:
  var_smoke_session_on:
  var_circulate_air_on:

##########################################
########## OPTIONS - ENVIRONMENT #########
##########################################
  #********** FANS ***********#
  option_turn_on_fans:
    name: "Turn on all fans (Overide)"

  option_temp_controlled_fans:
    name: "Temperature controlled fans"
    initial: on

  option_circulate_air:
    name: "Circulate air every 2 hours (for 15m)"
    initial: on

  #********** AIR CONDITIONER ***********#
  option_turn_on_air_conditioner:
    name: "Turn on Air Conditioner (Overide)"

  option_temp_controlled_air_conditioner:
    name: "Temperature controlled Air Conditioner"
    initial: on


input_slider:
  option_indoor_temp_hot:
    name: Indoor Temp (HOT)
    initial: 84
    min: 70
    max: 90
    step: 1

  option_indoor_temp_warm:
    name: Indoor Temp (WARM)
    initial: 78
    min: 65
    max: 85
    step: 1

  option_indoor_temp_cold:
    name: Indoor Temp (COLD)
    initial: 68
    min: 65
    max: 85
    step: 1


##########################################
############### GROUPS ###################
##########################################
group:

  temperature_sensors:
    name: "Temperature"
    entities:
      - sensor.dark_sky_temperature
      - sensor.indoor_temperature
      - sensor.kitchen_temperature
      - sensor.tables_temperature
      - sensor.entertainment_center_temperature
      - sensor.office_temperature
      - sensor.bedroom_temperature

  humidity_sensors:
    name: "Humidity"
    entities:
      - sensor.dark_sky_humidity
      - sensor.indoor_humidity
      - sensor.kitchen_humidity
      - sensor.tables_humidity
      - sensor.office_humidity
      - sensor.entertainment_center_humidity
      - sensor.bedroom_humidity

  motion_sensors:
    name: "Motion"
    entities:
      - binary_sensor.kitchen_motion_sensor
      - binary_sensor.sink_motion_sensor
      - binary_sensor.entertainment_center_motion_sensor
      - binary_sensor.bedroom_motion_sensor
      - binary_sensor.office_motion_sensor

  fans_air_conditioner:
    name: "Fans & Air Conditioner"
    entities:
      - input_boolean.option_turn_on_fans
      - switch.air_conditioner
      - switch.sonoff_box_fan1
      - switch.sonoff_small_desk_fan1

  automation_environment:
    entities:
      - automation.indoor_temp_warm_notification
      - automation.indoor_temp_cold_notification
      - automation.bedroom_temperature_cold_after_9pm
      - automation.set_indoor_temp_warm
      - automation.set_indoor_temp_hot
      - automation.set_indoor_temp_ok
      - automation.indoor_temp_warm
      - automation.indoor_temp_hot
      - automation.indoor_temp_ok
      - automation.circulate_air_start
      - automation.fans_turn_on
      - automation.fans_turn_off
      - automation.air_conditioner_turn_on
      - automation.air_conditioner_turn_off
      - automation.fan_on_chromecast_volume_up
      - automation.fan_off_chromecast_volume_down
      - automation.air_conditioner_on_chromecast_volume_up
      - automation.air_conditioner_off_chromecast_volume_down

  homeassistant_environment:
    entities:
      - input_boolean.var_indoor_temp_hot
      - input_boolean.var_indoor_temp_warm
      - input_boolean.var_indoor_temp_ok
      - input_boolean.var_circulate_air_on

  options_environment:
    name: "Environment"
    entities:
      - input_boolean.option_turn_on_fans
      - input_boolean.option_circulate_air
      - input_boolean.option_temp_controlled_fans
      - input_boolean.option_turn_on_air_conditioner
      - input_boolean.option_temp_controlled_air_conditioner
      - input_slider.option_indoor_temp_cold
      - input_slider.option_indoor_temp_warm
      - input_slider.option_indoor_temp_hot

  script_environment:
    entities:
      - script.fix_air_conditioner_sync
