homeassistant:
  customize:
    script.entertainment_center_tv_volume_sync:
      emulated_hue: true
      emulated_hue_name: "TV Volume Sync"
# switch:
# lights:
# binary_sensor:
# sensor:

automation:
  #********** Volume Sync ***********#
  - alias: entertainment_center_tv_on_volume_sync
    trigger:
      platform: state
      entity_id: switch.sonoff_entertainment_center
      state: 'on'
    action:
      - service: script.entertainment_center_tv_volume_sync

  #********** MQTT Subscriptions - Set State TV Volume ***********#
  - alias: set_state_entertainment_center_tv_volume_down
    trigger:
    - platform: mqtt
      topic: device/eventghost/set_state_entertainment_center_tv_volume_down
      payload: "1"
    action:
    - service: input_slider.select_value
      data_template:
        entity_id: input_slider.var_tv_entertainment_center_volume
        value: '{{ states.input_slider.var_tv_entertainment_center_volume.state | int - 1 }}'

  - alias: set_state_entertainment_center_tv_volume_up
    trigger:
    - platform: mqtt
      topic: device/eventghost/set_state_entertainment_center_tv_volume_up
      payload: "1"
    action:
    - service: input_slider.select_value
      data_template:
        entity_id: input_slider.var_tv_entertainment_center_volume
        value: '{{ states.input_slider.var_tv_entertainment_center_volume.state | int + 1 }}'



##########################################
########## SCRIPTS #######################
##########################################
script:
  #********** Tests ***********#
  test_entertainment_center_tv_volume:
    sequence:
      - service: script.set_entertainment_center_tv_volume
        data_template:
          volume_level: '{{ volume_level }}'

  #********** Entertainment Center - Volume Sync ***********#
  entertainment_center_tv_volume_sync:
    sequence:
      # Store current volume level
      - service: script.set_var_tv_entertainment_center_volume_stored
      - delay: '00:00:03' # Delay allows time for TV to reach 0

      # Sync Vol:: Set tv volume to 0; set HASS volume input_slider to 0
      - service: mqtt.publish
        data_template:
          topic: "device/eventghost/ircommand_tv_vol_0"
          payload: '1'
      - service: input_slider.select_value
        data:
          entity_id: input_slider.var_tv_entertainment_center_volume
          value: 0
      - delay: '00:00:03' # Delay allows time for TV to reach 0

      # Restore stored volume level
      - service: script.set_entertainment_center_tv_volume
        data_template:
          volume_level: '{{ states.input_slider.var_tv_entertainment_center_volume_stored.state | int }}'

  #********** Entertainment Center - Set Stored State ***********#
  set_var_tv_entertainment_center_volume_stored:
    sequence:
      - service: input_slider.select_value
        data_template:
          entity_id: input_slider.var_tv_entertainment_center_volume_stored
          value: '{{ states.input_slider.var_tv_entertainment_center_volume.state | int }}'

#############################################
###### SET ENTERTAINMENT CENTER VOLUME ######
#############################################
  set_entertainment_center_tv_volume:
    sequence:
      - service: script.turn_off
        entity_id: script.calc_send_entertainment_center_tv_volume
      - service: script.turn_off
        entity_id: script.send_entertainment_center_tv_volume_down
      - service: script.turn_off
        entity_id: script.send_entertainment_center_tv_volume_up

      - service: input_slider.select_value
        data_template:
          entity_id: input_slider.var_tv_entertainment_center_volume_set
          value: >
            {% if volume_level %}
              {{ volume_level | int }}
            {% elif volume_up %}
              {{ states.input_slider.var_tv_entertainment_center_volume.state | int + volume_up | int }}
            {% elif volume_down %}
              {{ states.input_slider.var_tv_entertainment_center_volume.state | int - volume_down | int }}
            {% endif %}
      - service: script.calc_send_entertainment_center_tv_volume

  calc_send_entertainment_center_tv_volume:
    sequence:
      - service: script.turn_off
        entity_id: script.send_entertainment_center_tv_volume_down
      - service: script.turn_off
        entity_id: script.send_entertainment_center_tv_volume_up

      - condition: template
        value_template: '{{ states.input_slider.var_tv_entertainment_center_volume.state | int != states.input_slider.var_tv_entertainment_center_volume_set.state | int }}'


      # Determain Adjustment Direction and call script.
      - service: script.turn_on
        data_template:
          entity_id: >
            {% if states.input_slider.var_tv_entertainment_center_volume_set.state | int > states.input_slider.var_tv_entertainment_center_volume.state | int %}
              script.send_entertainment_center_tv_volume_up
            {% else %}
              script.send_entertainment_center_tv_volume_down
            {% endif %}


  send_entertainment_center_tv_volume_down:
    sequence:
    - service: script.turn_off
      entity_id: script.calc_send_entertainment_center_tv_volume
    # Send MQTT Command
    - service: mqtt.publish
      data_template:
        topic: "device/eventghost/ircommand_tv_vol_down"
        payload: "{{ states.input_slider.var_tv_entertainment_center_volume.state | int - 1 }}"
    # Send Net Volume State
    - service: input_slider.select_value
      data_template:
        entity_id: input_slider.var_tv_entertainment_center_volume
        value: '{{ states.input_slider.var_tv_entertainment_center_volume.state | int  - 1 }}'
    - service: script.turn_on
      entity_id: script.calc_send_entertainment_center_tv_volume


  send_entertainment_center_tv_volume_up:
    sequence:
    - service: script.turn_off
      entity_id: script.set_entertainment_center_tv_volume
    # Send MQTT Command
    - service: mqtt.publish
      data_template:
        topic: "device/eventghost/ircommand_tv_vol_up"
        payload: '{{ states.input_slider.var_tv_entertainment_center_volume.state | int + 1 }}'
    # Send Net Volume State
    - service: input_slider.select_value
      data_template:
        entity_id: input_slider.var_tv_entertainment_center_volume
        value: '{{ states.input_slider.var_tv_entertainment_center_volume.state | int + 1 }}'
    - service: script.calc_send_entertainment_center_tv_volume

#############################################
########## SET COMPUTERS VOLUME ############
#############################################
  set_computers_volume: # [volume_level, volume_up, volume down] Note: All variables are percents
    sequence:
      - service_template: >
          {% if volume_level %}
            set_computers_volume_level
          {% elif volume_up %}
            set_computers_volume_up
          {% elif volume_down %}
            set_computers_volume_down
          {% elif volume_mute_toggle %}
            set_computers_volume_mute_toggle
          {% endif %}
        data_template:
          value: >
            {% if volume_level %}
              volume_level
            {% elif volume_up %}
              volume_up
            {% elif volume_down %}
              volume_down
            {% elif volume_down %}
              toggle
            {% endif %}

  set_computers_volume_level:
    sequence:
      - service: shell_command.acer_volume_level
        data_template:
            value: '{{ value }}'
      - service: shell_command.desktop_volume_level
        data_template:
            value: '{{ value }}'
      - service: shell_command.vserver_volume_level
        data_template:
            value: '{{ value }}'

  set_computers_volume_up:
    sequence:
      - service: shell_command.acer_volume_up
        data_template:
            value: '{{ value }}'
      - service: shell_command.desktop_volume_up
        data_template:
            value: '{{ value }}'
      - service: shell_command.vserver_volume_up
        data_template:
            value: '{{ value }}'

  set_computers_volume_down:
    sequence:
      - service: shell_command.acer_volume_down
        data_template:
            value: '{{ value }}'
      - service: shell_command.desktop_volume_down
        data_template:
            value: '{{ value }}'
      - service: shell_command.vserver_volume_down
        data_template:
            value: '{{ value }}'

  set_computers_volume_mute_toggle:
    sequence:
      - service: shell_command.acer_volume_mute_toggle
      - service: shell_command.desktop_volume_mute_toggle
      - service: shell_command.vserver_volume_mute_toggle


##########################################
########## SHELL COMMANDS ################
##########################################
shell_command:
  acer_volume_mute_toggle: ssh acer@acer amixer -q sset Master toggle
  acer_volume_level: 'ssh acer@acer amixer -q sset Master {{ value }}%'
  acer_volume_up: 'ssh acer@acer amixer -q sset Master {{ value }}%+'
  acer_volume_down: 'ssh acer@acer amixer -q sset Master {{ value }}%-'

  desktop_volume_mute_toggle: ssh martokk@desktop amixer -q sset Master toggle
  desktop_volume_level: 'ssh martokk@desktop -q sset Master {{ value }}%'
  desktop_volume_up: 'ssh martokk@desktop -q sset Master {{ value }}%+'
  desktop_volume_down: 'ssh martokk@desktop -q sset Master {{ value }}%-'

  vserver_volume_mute_toggle: amixer -q sset Master toggle
  vserver_volume_level: 'amixer -q sset Master {{ value }}%'
  vserver_volume_up: 'amixer -q sset Master {{ value }}%+'
  vserver_volume_down: 'amixer -q sset Master {{ value }}%-'


input_slider:
##########################################
########## STORED VARIABLES ##############
##########################################
  var_tv_entertainment_center_volume: #in Seconds
    min: 0
    max: 70

  var_tv_entertainment_center_volume_set: #in Seconds
    min: 0
    max: 70

  var_tv_entertainment_center_volume_stored: #in Seconds
    min: 0
    max: 70

##########################################
########## OPTIONS #######################
##########################################


##########################################
############### GROUPS ###################
##########################################
group:
  automation_volume_control:
    entities:
      - automation.entertainment_center_tv_on_volume_sync
      - automation.set_state_entertainment_center_tv_volume_down
      - automation.set_state_entertainment_center_tv_volume_up


  homeassistant_volume_control:
    entities:
      - input_slider.var_tv_entertainment_center_volume
      - input_slider.var_tv_entertainment_center_volume_set
      - input_slider.var_tv_entertainment_center_volume_stored


  script_volume_control:
    entities:
      - script.test_entertainment_center_tv_volume
      - script.entertainment_center_tv_volume_sync
      - script.set_var_tv_entertainment_center_volume_stored
      - script.set_entertainment_center_tv_volume
      - script.calc_send_entertainment_center_tv_volume
      - script.send_entertainment_center_tv_volume_down
      - script.send_entertainment_center_tv_volume_up

      - script.test_computers_volume
      - script.set_computers_volume
      - script.set_computers_volume_level
      - script.set_computers_volume_up
      - script.set_computers_volume_down
      - script.set_computers_volume_mute_toggle
