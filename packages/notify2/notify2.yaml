notify:
  - name: gmail
    platform: smtp
    server: smtp.gmail.com
    port: 587
    sender: "vhome.notifications@gmail.com"
    starttls: true
    username: vhome.notifications@gmail.com
    password: !secret gmail_password
    recipient: "vhome.notifications@gmail.com"

  - name: sms
    platform: smtp
    server: smtp.gmail.com
    port: 587
    sender: "vhome.notifications@gmail.com"
    starttls: true
    username: vhome.notifications@gmail.com
    password: !secret gmail_password
    recipient: "2622206437@mms.att.net"

  - name: mlo
    platform: smtp
    server: smtp.gmail.com
    port: 587
    sender: "vhome.notifications@gmail.com"
    starttls: true
    username: vhome.notifications@gmail.com
    password: !secret gmail_password
    recipient: "vill022@sync.mylifeorganized.net"

  - name: telegram
    platform: telegram
    api_key: 371185092:AAGZifDwOUZLssxyEwzj7un9EG261Ve_eGg
    chat_id: 343498992

  # - name: ios_iphone6s
  #   platform: ios
  #   target: 'ef95be9c-abb9-3494-b2ec-16837a198b2f'



script:
##########################################
##########  TEST NOTIFY2 #################
##########################################
  notify2_test:
    sequence:
      - service: script.notify2
        data:
          flash_color: "cyan"
          entity_id: group.timebased_hourly_flash_lights


##########################################
##########  MAIN NOTIFY2 #################
##########################################
  notify2:
    alias: "vHome Notify2"
    sequence:
    - service: script.notify2_sms
      data_template:
        sms_message: "{{ sms_message }}"
    - service: script.notify2_email
      data_template:
        email_message: "{{ email_message }}"
    - service: script.notify2_mlo
      data_template:
        mlo_message: "{{ mlo_message }}"
    - service: script.notify2_telegram
      data_template:
        telegram_message: "{{ telegram_message }}"
        telegram_url: "{{ telegram_url }}"
    ### CONDITION: MIKE is HOME
    - condition: state
      entity_id: input_boolean.var_mike_home
      state: 'on'
    - service: script.notify2_chromecast
      data_template:
        chromecast_link: "{{ chromecast_link }}"
        chromecast_entity_id: "{{ chromecast_entity_id }}"
    - service: script.notify2_lights
      data_template:
        blink_color: "{{ blink_color }}"
        blink_color2: "{{ blink_color2 }}"
        breathe_color: "{{ breathe_color }}"
        flash_color: "{{ flash_color }}"
        flood_color: "{{ flood_color }}"
        flood_scene: "{{ flood_scene }}"
        delay: "{{ delay }}"
        entity_id: "{{entity_id}}"
        next_scene: "{{ next_scene }}"
    - service: script.notify2_tts
      data_template:
        tts_message: "{{ tts_message }}"
        tts_entity_id: "{{ tts_entity_id }}"
        tts_sound: "{{ tts_sound }}"

  #********** SMS Notifications ***************************************#
  notify2_sms:
    sequence:
    - service_template: >
        {% if sms_message %}
          {% if is_state('input_boolean.option_notify2_sms', 'on') %}
            notify.sms
          {% else %}
            script.notify2_do_nothing
          {% endif %}
        {% else %}
          script.notify2_do_nothing
        {% endif %}
      data_template:
        message: "{{ sms_message }}"


  #********** Email Notifications ***************************************#
  notify2_email:
    sequence:
    - service_template: >
        {% if email_message %}
          {% if is_state('input_boolean.option_notify2_email', 'on') %}
            notify.gmail
          {% else %}
            script.notify2_do_nothing
          {% endif %}
        {% else %}
          script.notify2_do_nothing
        {% endif %}
      data_template:
        message: "{{ email_message }}"


#********** MLO Notifications ***************************************#
  notify2_mlo:
    sequence:
    - service_template: >
        {% if mlo_message %}
          {% if is_state('input_boolean.option_notify2_mlo', 'on') %}
            notify.mlo
          {% else %}
            script.notify2_do_nothing
          {% endif %}
        {% else %}
          script.notify2_do_nothing
        {% endif %}
      data_template:
        title: "{{ mlo_message }}"
        message: ""


  #********** Telegram Notifications ***************************************#
  notify2_telegram:
    sequence:
    - service_template: >
        {% if telegram_message %}
          {% if is_state('input_boolean.option_notify2_telegram', 'on') %}
            notify.telegram
          {% else %}
            script.notify2_do_nothing
          {% endif %}
        {% else %}
          script.notify2_do_nothing
        {% endif %}
      data_template:
        message: "{{ telegram_message | replace('_', 'Ë·') }}"

    #*--------- Telegram Picture Notifications --------------*#
    - service_template: >
        {% if telegram_url %}
          {% if is_state('input_boolean.option_notify2_telegram', 'on') %}
            notify.telegram
          {% else %}
            script.notify2_do_nothing
          {% endif %}
        {% else %}
          script.notify2_do_nothing
        {% endif %}
      data_template:
        message: ''
        data:
          photo:
            url: "{{ telegram_url }}"



  #********** Chromecast Media Notifications ***************************************#
  notify2_chromecast:
    sequence:
    - service_template: >
        {% if chromecast_link %}
          {% if not chromecast_entity_id %}
            {% set chromecast_entity_id = 'media_player.vtv_chromecast' %}
          {% endif %}
          {% if is_state('input_boolean.option_notify2_chromecast', 'on') %}
            {% if not is_state('binary_sensor.ps3', 'on') %}
              {% if (not is_state(chromecast_entity_id, 'playing') and not is_state(chromecast_entity_id, 'paused')) or states.media_player.vtv_chromecast.attributes.app_name | lower in states.input_select.array_chromecast_idle_apps | lower %}
                media_player.play_media
              {% else %}
                script.notify2_do_nothing
              {% endif %}
            {% else %}
              script.notify2_do_nothing
            {% endif %}
          {% else %}
            script.notify2_do_nothing
          {% endif %}
        {% else %}
          script.notify2_do_nothing
        {% endif %}
      data_template:
        entity_id: "{% if chromecast_entity_id %} {{ chromecast_entity_id }} {% else %} media_player.vtv_chromecast {% endif %}"
        media_content_type: video
        media_content_id: "{{ chromecast_link }}"



  #********** Light Notifications ***************************************#
  notify2_lights:
    sequence:
    - service_template: >
        {% if is_state('input_boolean.option_notify2_lights', 'on') %}

          {% if flood_color %}
            {% if blink_color %}
              {% if blink_color2 %}
                script.flood_and_blink2
              {% else %}
                script.flood_and_blink
              {% endif %}
            {% elif breathe_color %}
              script.flood_and_breathe
            {% elif next_scene %}
              script.flood_and_change_scene
            {% else %}
              script.flood_light
            {% endif %}

          {% elif blink_color %}
            {% if blink_color2 %}
              script.blink2_light
            {% else %}
              script.blink_light
            {% endif %}

          {% elif breathe_color %}
            script.breathe_light

          {% elif flash_color %}
            script.flash_light

          {% elif flood_scene %}
            script.flood_scene

          {% else %}
            script.notify2_do_nothing

          {% endif %}

        {% else %}
          script.notify2_do_nothing
        {% endif %}
      data_template:
        blink_color: "{{ blink_color }}"
        blink_color2: "{{ blink_color2 }}"
        breathe_color: "{{ breathe_color }}"
        flash_color: "{{ flash_color }}"
        flood_color: "{{ flood_color }}"
        flood_scene: "{{ flood_scene }}"
        delay: "{{ delay }}"
        entity_id: "{% if entity_id %}{{entity_id}}{% else %}group.all_lights{% endif %}"
        next_scene: "{{ next_scene }}"


  #********** TTS Notificaiton - Pause Chromecast if playing ***************************************#
  notify2_tts:
    sequence:
    - service_template: >
        {% if tts_message %}
          {% if is_state('input_boolean.option_notify2_tts', 'on') %}
            {% if is_state('media_player.vtv_chromecast', 'playing') %}
              input_boolean.turn_on
            {% else %}
              script.notify2_do_nothing
            {% endif %}
          {% else %}
            script.notify2_do_nothing
          {% endif %}
        {% else %}
          script.notify2_do_nothing
        {% endif %}
      data_template:
        entity_id: input_boolean.var_chromecast_interupt

    #*--------- TTS Sound --------------*#
    - service_template: >
        {% if tts_message or tts_sound %}
          {% if is_state('input_boolean.option_notify2_tts', 'on') %}
            media_player.play_media
          {% else %}
            script.notify2_do_nothing
          {% endif %}
        {% else %}
          script.notify2_do_nothing
        {% endif %}
      data_template:
        entity_id: "{% if tts_entity_id %} {{ tts_entity_id }} {% else %} media_player.vlc {% endif %}"
        media_content_type: music
        media_content_id: "{% if tts_sound %}http://192.168.1.3:8123/local/sounds/{{ tts_sound }}{% else %} http://192.168.1.3:8123/local/sounds/intercom_ds9.mp3 {% endif %}"
    - delay: '00:00:01'

    #*--------- TTS Notificaiton --------------*#
    - service_template: >
        {% if tts_message %}
          {% if is_state('input_boolean.option_notify2_tts', 'on') %}
            tts.google_say
          {% else %}
            script.notify2_do_nothing
          {% endif %}
        {% else %}
          script.notify2_do_nothing
        {% endif %}
      data_template:
        entity_id: "{% if tts_entity_id %} {{ tts_entity_id }} {% else %} media_player.vlc {% endif %}"
        message: '{{ tts_message }}'
    - service: script.notify2_tts_resume


  #********** Do Nothing ***************************************#
  notify2_do_nothing:
    alias: "vHome Notify2: Do Nothing"
    sequence:


  #********** TTS Notificaiton - Resume Chromecast if Paused ***************************************#
  notify2_tts_resume:
    alias: "vHome Notify2: TTS Resume"
    sequence:
    - condition: state
      entity_id: input_boolean.var_chromecast_interupt
      state: 'on'
    - condition: state
      entity_id: media_player.vtv_chromecast
      state: 'paused'
    - delay: '00:00:08'
    - service_template: >
        {% if tts_message %}
          {% if is_state('input_boolean.option_notify2_tts', 'on') %}
            {% if is_state('media_player.vlc', 'idle') %}
              media_player.media_play
            {% else %}
              script.notify2_do_nothing
            {% endif %}
          {% else %}
            script.notify2_do_nothing
          {% endif %}
        {% else %}
          script.notify2_do_nothing
        {% endif %}
      data_template:
        entity_id: media_player.vtv_chromecast
    - service: input_boolean.turn_off
      entity_id: input_boolean.var_chromecast_interupt



input_boolean:
##########################################
########## STORED VARIABLES ##############
##########################################



##########################################
########## OPTIONS #######################
##########################################
  option_notify2_sms:
    name: "SMS Notifications"
    initial: on

  option_notify2_email:
    name: "Email Notifications"
    initial: on

  option_notify2_mlo:
    name: "MLO Notifications"
    initial: on

  option_notify2_telegram:
    name: "Telegram Notifications"
    initial: on

  option_notify2_tts:
    name: "TTS Notifications"
    initial: on

  option_notify2_chromecast:
    name: "Chromecast Notifications"
    initial: on

  option_notify2_lights:
    name: "Lights Notifications"
    initial: on

input_slider:
  option_notification_brightness:
    name: Notfication Brightness
    initial: 225
    min: 1
    max: 255
    step: 5

  option_notification_brightness_low:
    name: Notfication Brightness (LOW)
    initial: 75
    min: 1
    max: 255
    step: 5

  option_tts_vol_low:
    name: TTS Volume (LOW)
    initial: 0.7
    min: 0
    max: 1
    step: 0.05

  option_tts_vol_high:
    name: TTS Volume (HIGH)
    initial: 1
    min: 0
    max: 1
    step: 0.05
