##########################################
############# BATTERY ####################
##########################################

  - alias: 'Battery Low Notification'
    trigger:
      - platform: numeric_state
        entity_id:
          - sensor.iphone6s_battery
          - sensor.ipad_battery
          - sensor.watch_battery
        below: 25
      - platform: numeric_state
        entity_id:
          - sensor.iphone6s_battery
          - sensor.ipad_battery
          - sensor.watch_battery
        below: 10
    action:
      - condition: template
        value_template: >
          {% if states.automation.battery_low_notification.attributes.last_triggered %}
            {% if (as_timestamp(now())-as_timestamp(states.automation.battery_low_notification.attributes.last_triggered)) > (1 * 30 * 60)  %}
              true
            {% else %}
              false
            {% endif %}
          {%else%}
            true
          {%endif%}
      - service: script.notify2
        data_template:
          telegram_message: >
            Battery Low!
            {% if states("sensor.iphone6s_battery") | int < 25 %}*{% endif %}iPhone: {{ states("sensor.iphone6s_battery") | int }}%{% if states("sensor.iphone6s_battery") | int < 25 %}*{% endif %} |  {% if states("sensor.watch_battery") | int < 25 %}*{% endif %}Watch: {{ states("sensor.watch_battery") | int }}%{% if states("sensor.watch_battery") | int < 25 %}*{% endif %} | {% if states("sensor.ipad_battery") | int < 25 %}*{% endif %}iPad: {{ states("sensor.ipad_battery") | int }}%{% if states("sensor.ipad_battery") | int < 25 %}*{% endif %}
      - condition: template
        value_template: >
          {% if trigger.to_state.state | int <= 10 %}
            true
          {% endif %}
      - service: script.notify2
        data_template:
          flood_color: "cyan"
          blink_color: "blueviolet"
          blink_color2: "red"


  - alias: 'Battery Fully Charged Text Only'
    trigger:
      - platform: state
        entity_id:
          - sensor.iphone6s_battery
          - sensor.watch_battery
        state: '100.0'
    action:
      - condition: time
        before: "22:59:59"
      - service: script.notify2
        data_template:
          telegram_message: |
            Battery Fully Charged!
            {% if states("sensor.iphone6s_battery") | int == 100 %}*{% endif %}iPhone: {{ states("sensor.iphone6s_battery") | int }}%{% if states("sensor.iphone6s_battery") | int == 100 %}*{% endif %} |  {% if states("sensor.watch_battery") | int == 100 %}*{% endif %}Watch: {{ states("sensor.watch_battery") | int }}%{% if states("sensor.watch_battery") | int == 100 %}*{% endif %}

  - alias: '10pm Charge Battery Reminder'
    trigger:
      - platform: time
        after: '22:00:00'
    action:
      - condition: time
        before: "22:59:59"
      - service: script.notify2
        data_template:
          telegram_message: |
            10pm Reminder -- Charge all device batteries!
            {% if states("sensor.iphone6s_battery") | int == 100 %}*{% endif %}iPhone: {{ states("sensor.iphone6s_battery") | int }}%{% if states("sensor.iphone6s_battery") | int == 100 %}*{% endif %} |  {% if states("sensor.watch_battery") | int == 100 %}*{% endif %}Watch: {{ states("sensor.watch_battery") | int }}%{% if states("sensor.watch_battery") | int == 100 %}*{% endif %}


  - alias: 'Battery Fully Charged Notificaiton'
    trigger:
      - platform: state
        entity_id:
          - sensor.iphone6s_battery
          - sensor.watch_battery
        state: '100.0'
        for:
          hours: 2
    action:
      - condition: time
        before: "22:59:59"
      - service: script.notify2
        data_template:
          telegram_message: |
            Battery Fully Charged!
            {% if states("sensor.iphone6s_battery") | int == 100 %}*{% endif %}iPhone: {{ states("sensor.iphone6s_battery") | int }}%{% if states("sensor.iphone6s_battery") | int == 100 %}*{% endif %} |  {% if states("sensor.watch_battery") | int == 100 %}*{% endif %}Watch: {{ states("sensor.watch_battery") | int }}%{% if states("sensor.watch_battery") | int == 100 %}*{% endif %}
          flood_color: "cyan"
          blink_color: "blueviolet"
          blink_color2: "green"

##########################################
########## DEVICE CONNECTED ##############
##########################################
  - alias: 'New Device Found'
    trigger:
      platform: event
      event_type: device_tracker_new_device
    action:
      - service: script.notify2
        data_template:
          telegram_message: |
            *New Device Found!*
            host_name     *{{trigger.event.data.host_name}}*
            mac_address  *{{trigger.event.data.mac}}*
            entity_id       {{trigger.event.data.entity_id}}

## BUG: Caused issue where MQTT from eventghost would not get triggered in HA. Has something to do with the "#" sign in the MQTT trigger.topic
  # - alias: 'vCORE Device Restarted'
  #   trigger:
  #     - platform: mqtt
  #       topic: 'device/#/device'
  #       payload: "restarted"
  #   action:
  #     - service: script.notify2
  #       data_template:
  #         telegram_message: |
  #           *Device Reconnected*
  #           topic     *{{trigger.event.data.topic}}*
  #           payload  *{{trigger.event.data.payload}}*


##########################################
########## TV ON/OFF #####################
##########################################
  - alias: 'TV Turned Off - Red Flash'
    trigger:
      platform: state
      entity_id: switch.sonoff_entertainment_center
      state: 'off'
    action:
      - service: script.notify2
        data_template:
          flash_color: "red"
          entity_id: group.tv_lights

  - alias: 'TV Turned On - Green Flash'
    trigger:
      platform: state
      entity_id: switch.sonoff_entertainment_center
      state: 'on'
    action:
      - service: script.notify2
        data_template:
          flash_color: "green"
          entity_id: group.tv_lights
