##########################################
########## DAY LE or DAY SCENE ###########
##########################################
  - alias: 'Weather based - Day LE'
    trigger:
    - platform: state
      entity_id: sensor.dark_sky_icon
    condition:
    - condition: state
      entity_id: input_boolean.var_mike_home
      state: 'on'
    - condition: state
      entity_id: input_select.var_last_known_scene
      state: 'Day'
    - condition: template
      value_template: >
        {% if "clear" in states.sensor.dark_sky_icon.state  %}
          true
        {% else %}
          false
        {% endif %}
    action:
    - service: scene.turn_on
      entity_id: scene.10m_day_le

  - alias: 'Weather based - Day'
    trigger:
    - platform: state
      entity_id: sensor.dark_sky_icon
    condition:
    - condition: state
      entity_id: input_boolean.var_mike_home
      state: 'on'
    - condition: state
      entity_id: input_select.var_last_known_scene
      state: 'Day Le'
    - condition: template
      value_template: >
        {% if "cloudy" in states.sensor.dark_sky_icon.state or "snow" in states.sensor.dark_sky_icon.state  or "sleet" in states.sensor.dark_sky_icon.state  or "rain" in states.sensor.dark_sky_icon.state  or "hail" in states.sensor.dark_sky_icon.state or "tornado" in states.sensor.dark_sky_icon.state or "fog" in states.sensor.dark_sky_icon.state or "thunderstorm" in states.sensor.dark_sky_icon.state %}
          true
        {% else %}
          false
        {% endif %}
    action:
    - service: scene.turn_on
      entity_id: scene.10m_day
# Clear; Partly Cloudy; Mostly Cloudy; Light Snow; Snow; Heavy Snow; Drizzle; Light Rain; Rain; Heavy Rain; Overcast; Foggy; Windy and Overcast

  - alias: 'Rain_Start'
    trigger:
    - platform: state
      entity_id: sensor.dark_sky_precip
      state: 'rain'
    condition:
    - condition: state
      entity_id: input_boolean.var_mike_home
      state: 'on'
    - condition: time
      after: '05:00'
      before: '02:00'
    action:
    - condition: template
      value_template: >
        {% if states.automation.rain_start.attributes.last_triggered %}
          {% if (as_timestamp(now())-as_timestamp(states.automation.rain_start.attributes.last_triggered)) > (1 * 60 * 60)  %}
            true
          {% else %}
            false
          {% endif %}
        {%else%}
          true
        {%endif%}
    - service: script.flood_and_blink2
      data:
        flood_color: "gold"
        blink_color: "blue"
        blink_color2: "green"
    - service: notify.gmail
      data_template:
        message: |
          It's starting to rain!

          {{ states("sensor.dark_sky_minutely_summary") }}
          {{ states("sensor.dark_sky_hourly_summary") }}

  - alias: 'Rain_Stop'
    trigger:
    - platform: state
      entity_id: sensor.dark_sky_precip
      from: 'rain'
      to: 'unknown'
      for:
        minutes: 15
    condition:
    - condition: state
      entity_id: input_boolean.var_mike_home
      state: 'on'
    - condition: time
      after: '05:00'
      before: '02:00'
    action:
    - condition: template
      value_template: >
        {% if states.automation.rain_stop.attributes.last_triggered %}
          {% if (as_timestamp(now())-as_timestamp(states.automation.rain_stop.attributes.last_triggered)) > (1 * 60 * 60)  %}
            true
          {% else %}
            false
          {% endif %}
        {%else%}
          true
        {%endif%}
    - service: script.flood_and_blink2
      data:
        flood_color: "gold"
        blink_color: "blue"
        blink_color2: "red"
    - service: notify.gmail
      data_template:
        message: |
          Rain Stopping!

          {{ states("sensor.dark_sky_minutely_summary") }}
          {{ states("sensor.dark_sky_hourly_summary") }}

  - alias: 'Snow_Start'
    trigger:
    - platform: state
      entity_id: sensor.dark_sky_precip
      state: 'snow'
    condition:
    - condition: state
      entity_id: input_boolean.var_mike_home
      state: 'on'
    - condition: time
      after: '05:00'
      before: '02:00'
    action:
    - condition: template
      value_template: >
        {% if states.automation.snow_start.attributes.last_triggered %}
          {% if (as_timestamp(now())-as_timestamp(states.automation.snow_start.attributes.last_triggered)) > (1 * 60 * 60)  %}
            true
          {% else %}
            false
          {% endif %}
        {%else%}
          true
        {%endif%}
    - service: script.flood_and_blink2
      data:
        flood_color: "gold"
        blink_color: "cyan"
        blink_color2: "green"
    - service: notify.gmail
      data_template:
        message: |
          It's starting to snow!

          {{ states("sensor.dark_sky_minutely_summary") }}
          {{ states("sensor.dark_sky_hourly_summary") }}

  - alias: 'Snow_Stop'
    trigger:
    - platform: state
      entity_id: sensor.dark_sky_precip
      from: 'snow'
      to: 'unknown'
      for:
        minutes: 15
    condition:
    - condition: state
      entity_id: input_boolean.var_mike_home
      state: 'on'
    - condition: time
      after: '05:00'
      before: '02:00'
    action:
    - condition: template
      value_template: >
        {% if states.automation.snow_stop.attributes.last_triggered %}
          {% if (as_timestamp(now())-as_timestamp(states.automation.snow_stop.attributes.last_triggered)) > (1 * 60 * 60)  %}
            true
          {% else %}
            false
          {% endif %}
        {%else%}
          true
        {%endif%}
    - service: script.flood_and_blink2
      data:
        flood_color: "gold"
        blink_color: "cyan"
        blink_color2: "red"
    - service: notify.gmail
      data_template:
        message: |
          Snow stopping!

          {{ states("sensor.dark_sky_minutely_summary") }}
          {{ states("sensor.dark_sky_hourly_summary") }}



#### WEATHER ALERTS ###########
  - alias: "Weather Alert"
    trigger:
      - platform: template
        value_template: >
          {% if states.sensor.weather_alert.state != "" %}
            true
          {%else%}
            false
          {%endif%}
    action:
      - condition: state
        entity_id: input_boolean.var_start_notifcations_1m
        state: 'on'
      - condition: template
        value_template: >
          {% if states.automation.weather_alert.attributes.last_triggered %}
            {% if (as_timestamp(now())-as_timestamp(states.automation.weather_alert.attributes.last_triggered)) > (2 * 60 * 60)  %}
              true
            {% else %}
              false
            {% endif %}
          {%else%}
            true
          {%endif%}
      - service: tts.google_say
        entity_id: media_player.vtv_chromecast
        data:
          message: Warning. Wearther Alert for Kenosha, WI for the following conditions
      - delay: "00:00:01"
      - service: notify.gmail
        data_template:
          message: |
            WEATHER ALERT!

            {{ states("sensor.weather_alert") }}
            {{ states.sensor.pws_alerts.attributes.Message }}
      - service: tts.google_say
        entity_id: media_player.vtv_chromecast
        data_template:
          message: '{{ states.sensor.weather_alert.state }}'
      - delay: "00:00:02"
      - service: script.flood_and_blink
        data:
          flood_color: "yellow"
          blink_color: "red"
      - delay: "00:00:07"
      - service: media_player.play_media
        data:
          entity_id: media_player.vtv_chromecast
          media_content_type: video
          media_content_id: https://sirocco.accuweather.com/nxssa_r1_h_500x620d/r1h/inxr1kmkea_h.gif
      - delay: "00:00:10"
      - service: media_player.play_media
        data:
          entity_id: media_player.vtv_chromecast
          media_content_type: video
          media_content_id: http://static.lakana.com/mmm-wisctv-media-us-east-1/weather/Local_Radar_Loop.gif
